<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="454" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="437.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="437.00"> </text><g id="frames"><g><title>&lt;module&gt; (pyspy2.py:3) (124 samples, 0.14%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(225,31,51)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (124 samples, 0.14%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(208,55,14)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (124 samples, 0.14%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(248,164,38)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (124 samples, 0.14%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(218,40,34)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (124 samples, 0.14%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(232,223,11)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (124 samples, 0.14%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(229,143,39)"/><text x="13.00" y="142.50"></text></g><g><title>read (pandas/io/parsers.py:1139) (826 samples, 0.96%)</title><rect x="12" y="100" width="11" height="15" fill="rgb(226,93,0)"/><text x="15.00" y="110.50"></text></g><g><title>read (pandas/io/parsers.py:1995) (826 samples, 0.96%)</title><rect x="12" y="116" width="11" height="15" fill="rgb(209,20,54)"/><text x="15.00" y="126.50"></text></g><g><title>&lt;module&gt; (pyspy2.py:58) (919 samples, 1.06%)</title><rect x="11" y="52" width="13" height="15" fill="rgb(207,171,45)"/><text x="14.00" y="62.50"></text></g><g><title>parser_f (pandas/io/parsers.py:702) (919 samples, 1.06%)</title><rect x="11" y="68" width="13" height="15" fill="rgb(243,74,45)"/><text x="14.00" y="78.50"></text></g><g><title>_read (pandas/io/parsers.py:435) (910 samples, 1.05%)</title><rect x="11" y="84" width="13" height="15" fill="rgb(252,146,44)"/><text x="14.00" y="94.50"></text></g><g><title>helper (autonormalize/classes.py:498) (96 samples, 0.11%)</title><rect x="26" y="228" width="2" height="15" fill="rgb(221,216,25)"/><text x="29.00" y="238.50"></text></g><g><title>find_closure (autonormalize/classes.py:603) (96 samples, 0.11%)</title><rect x="26" y="244" width="2" height="15" fill="rgb(221,66,48)"/><text x="29.00" y="254.50"></text></g><g><title>helper (autonormalize/classes.py:601) (92 samples, 0.11%)</title><rect x="26" y="260" width="2" height="15" fill="rgb(232,148,3)"/><text x="29.00" y="270.50"></text></g><g><title>helper (autonormalize/classes.py:601) (89 samples, 0.10%)</title><rect x="26" y="276" width="2" height="15" fill="rgb(244,37,53)"/><text x="29.00" y="286.50"></text></g><g><title>helper (autonormalize/classes.py:601) (88 samples, 0.10%)</title><rect x="26" y="292" width="2" height="15" fill="rgb(242,76,39)"/><text x="29.00" y="302.50"></text></g><g><title>helper (autonormalize/classes.py:601) (88 samples, 0.10%)</title><rect x="26" y="308" width="2" height="15" fill="rgb(240,207,35)"/><text x="29.00" y="318.50"></text></g><g><title>helper (autonormalize/classes.py:601) (85 samples, 0.10%)</title><rect x="26" y="324" width="2" height="15" fill="rgb(220,121,11)"/><text x="29.00" y="334.50"></text></g><g><title>helper (autonormalize/classes.py:601) (76 samples, 0.09%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(231,206,42)"/><text x="30.00" y="350.50"></text></g><g><title>helper (autonormalize/classes.py:498) (100 samples, 0.12%)</title><rect x="28" y="244" width="1" height="15" fill="rgb(254,121,31)"/><text x="31.00" y="254.50"></text></g><g><title>find_closure (autonormalize/classes.py:603) (98 samples, 0.11%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(231,197,10)"/><text x="31.00" y="270.50"></text></g><g><title>helper (autonormalize/classes.py:601) (97 samples, 0.11%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(212,155,12)"/><text x="31.00" y="286.50"></text></g><g><title>helper (autonormalize/classes.py:601) (93 samples, 0.11%)</title><rect x="28" y="292" width="1" height="15" fill="rgb(209,222,1)"/><text x="31.00" y="302.50"></text></g><g><title>helper (autonormalize/classes.py:601) (91 samples, 0.11%)</title><rect x="28" y="308" width="1" height="15" fill="rgb(247,223,14)"/><text x="31.00" y="318.50"></text></g><g><title>helper (autonormalize/classes.py:601) (86 samples, 0.10%)</title><rect x="28" y="324" width="1" height="15" fill="rgb(240,63,39)"/><text x="31.00" y="334.50"></text></g><g><title>helper (autonormalize/classes.py:601) (84 samples, 0.10%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(243,132,3)"/><text x="31.00" y="350.50"></text></g><g><title>helper (autonormalize/classes.py:601) (79 samples, 0.09%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(209,229,38)"/><text x="31.00" y="366.50"></text></g><g><title>helper (autonormalize/classes.py:601) (77 samples, 0.09%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(212,128,19)"/><text x="31.00" y="382.50"></text></g><g><title>helper (autonormalize/classes.py:601) (76 samples, 0.09%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(208,18,54)"/><text x="31.00" y="398.50"></text></g><g><title>helper (autonormalize/classes.py:601) (74 samples, 0.09%)</title><rect x="28" y="404" width="1" height="15" fill="rgb(215,174,29)"/><text x="31.00" y="414.50"></text></g><g><title>find_candidate_keys (autonormalize/classes.py:504) (333 samples, 0.39%)</title><rect x="25" y="132" width="4" height="15" fill="rgb(245,26,28)"/><text x="28.00" y="142.50"></text></g><g><title>helper (autonormalize/classes.py:501) (333 samples, 0.39%)</title><rect x="25" y="148" width="4" height="15" fill="rgb(236,35,9)"/><text x="28.00" y="158.50"></text></g><g><title>helper (autonormalize/classes.py:501) (333 samples, 0.39%)</title><rect x="25" y="164" width="4" height="15" fill="rgb(247,87,47)"/><text x="28.00" y="174.50"></text></g><g><title>helper (autonormalize/classes.py:501) (325 samples, 0.38%)</title><rect x="25" y="180" width="4" height="15" fill="rgb(247,157,42)"/><text x="28.00" y="190.50"></text></g><g><title>helper (autonormalize/classes.py:501) (301 samples, 0.35%)</title><rect x="25" y="196" width="4" height="15" fill="rgb(230,18,42)"/><text x="28.00" y="206.50"></text></g><g><title>helper (autonormalize/classes.py:501) (238 samples, 0.28%)</title><rect x="26" y="212" width="3" height="15" fill="rgb(247,150,2)"/><text x="29.00" y="222.50"></text></g><g><title>helper (autonormalize/classes.py:501) (141 samples, 0.16%)</title><rect x="28" y="228" width="1" height="15" fill="rgb(226,155,9)"/><text x="31.00" y="238.50"></text></g><g><title>find_candidate_keys (autonormalize/classes.py:507) (110 samples, 0.13%)</title><rect x="29" y="132" width="2" height="15" fill="rgb(210,226,15)"/><text x="32.00" y="142.50"></text></g><g><title>remove_part_deps (autonormalize/normalize.py:52) (534 samples, 0.62%)</title><rect x="25" y="100" width="7" height="15" fill="rgb(210,59,17)"/><text x="28.00" y="110.50"></text></g><g><title>find_partial_deps (autonormalize/classes.py:532) (534 samples, 0.62%)</title><rect x="25" y="116" width="7" height="15" fill="rgb(251,1,3)"/><text x="28.00" y="126.50"></text></g><g><title>find_candidate_keys (autonormalize/classes.py:510) (78 samples, 0.09%)</title><rect x="31" y="132" width="1" height="15" fill="rgb(253,203,45)"/><text x="34.00" y="142.50"></text></g><g><title>&lt;module&gt; (pyspy2.py:66) (535 samples, 0.62%)</title><rect x="25" y="52" width="7" height="15" fill="rgb(228,35,53)"/><text x="28.00" y="62.50"></text></g><g><title>normalize_dependencies (autonormalize/user_interaction.py:46) (535 samples, 0.62%)</title><rect x="25" y="68" width="7" height="15" fill="rgb(245,123,10)"/><text x="28.00" y="78.50"></text></g><g><title>normalize (autonormalize/normalize.py:33) (535 samples, 0.62%)</title><rect x="25" y="84" width="7" height="15" fill="rgb(240,196,46)"/><text x="28.00" y="94.50"></text></g><g><title>_convert_slice_indexer (pandas/core/indexing.py:266) (132 samples, 0.15%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(213,81,29)"/><text x="42.00" y="206.50"></text></g><g><title>_get_slice_axis (pandas/core/indexing.py:2178) (245 samples, 0.28%)</title><rect x="39" y="180" width="3" height="15" fill="rgb(236,137,15)"/><text x="42.00" y="190.50"></text></g><g><title>_convert_slice_indexer (pandas/core/indexing.py:267) (100 samples, 0.12%)</title><rect x="41" y="196" width="1" height="15" fill="rgb(234,183,27)"/><text x="44.00" y="206.50"></text></g><g><title>getitem_block (pandas/core/internals/blocks.py:295) (78 samples, 0.09%)</title><rect x="47" y="260" width="1" height="15" fill="rgb(218,92,7)"/><text x="50.00" y="270.50"></text></g><g><title>get_slice (pandas/core/internals/managers.py:694) (428 samples, 0.50%)</title><rect x="47" y="228" width="5" height="15" fill="rgb(206,198,16)"/><text x="50.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:694) (409 samples, 0.47%)</title><rect x="47" y="244" width="5" height="15" fill="rgb(252,95,22)"/><text x="50.00" y="254.50"></text></g><g><title>getitem_block (pandas/core/internals/blocks.py:302) (207 samples, 0.24%)</title><rect x="50" y="260" width="2" height="15" fill="rgb(236,171,5)"/><text x="53.00" y="270.50"></text></g><g><title>make_block_same_class (pandas/core/internals/blocks.py:235) (185 samples, 0.21%)</title><rect x="50" y="276" width="2" height="15" fill="rgb(229,55,48)"/><text x="53.00" y="286.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (157 samples, 0.18%)</title><rect x="50" y="292" width="2" height="15" fill="rgb(225,50,16)"/><text x="53.00" y="302.50"></text></g><g><title>__getitem__ (pandas/core/indexes/base.py:3956) (97 samples, 0.11%)</title><rect x="53" y="244" width="1" height="15" fill="rgb(219,150,17)"/><text x="56.00" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:266) (111 samples, 0.13%)</title><rect x="57" y="292" width="2" height="15" fill="rgb(230,41,47)"/><text x="60.00" y="302.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:285) (87 samples, 0.10%)</title><rect x="60" y="292" width="1" height="15" fill="rgb(220,221,43)"/><text x="63.00" y="302.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (82 samples, 0.09%)</title><rect x="60" y="308" width="1" height="15" fill="rgb(210,106,1)"/><text x="63.00" y="318.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:292) (123 samples, 0.14%)</title><rect x="61" y="292" width="2" height="15" fill="rgb(215,147,53)"/><text x="64.00" y="302.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:403) (109 samples, 0.13%)</title><rect x="67" y="292" width="1" height="15" fill="rgb(241,226,31)"/><text x="70.00" y="302.50"></text></g><g><title>get_slice (pandas/core/internals/managers.py:697) (1,447 samples, 1.67%)</title><rect x="53" y="228" width="19" height="15" fill="rgb(238,11,33)"/><text x="56.00" y="238.50"></text></g><g><title>__getitem__ (pandas/core/indexes/base.py:3963) (1,312 samples, 1.52%)</title><rect x="55" y="244" width="17" height="15" fill="rgb(240,191,53)"/><text x="58.00" y="254.50"></text></g><g><title>_shallow_copy (pandas/core/indexes/numeric.py:71) (1,274 samples, 1.47%)</title><rect x="55" y="260" width="17" height="15" fill="rgb(247,137,24)"/><text x="58.00" y="270.50"></text></g><g><title>_shallow_copy_with_infer (pandas/core/indexes/base.py:607) (1,163 samples, 1.35%)</title><rect x="57" y="276" width="15" height="15" fill="rgb(215,217,16)"/><text x="60.00" y="286.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:404) (303 samples, 0.35%)</title><rect x="68" y="292" width="4" height="15" fill="rgb(243,42,25)"/><text x="71.00" y="302.50"></text></g><g><title>__new__ (pandas/core/indexes/numeric.py:58) (151 samples, 0.17%)</title><rect x="70" y="308" width="2" height="15" fill="rgb(222,57,23)"/><text x="73.00" y="318.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (143 samples, 0.17%)</title><rect x="79" y="324" width="2" height="15" fill="rgb(227,222,31)"/><text x="82.00" y="334.50"></text></g><g><title>_consolidate_check (pandas/core/internals/managers.py:600) (627 samples, 0.73%)</title><rect x="73" y="260" width="9" height="15" fill="rgb(213,180,30)"/><text x="76.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:600) (615 samples, 0.71%)</title><rect x="73" y="276" width="9" height="15" fill="rgb(216,89,10)"/><text x="76.00" y="286.50"></text></g><g><title>ftype (pandas/core/internals/blocks.py:318) (559 samples, 0.65%)</title><rect x="74" y="292" width="8" height="15" fill="rgb(253,179,4)"/><text x="77.00" y="302.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:54) (279 samples, 0.32%)</title><rect x="78" y="308" width="4" height="15" fill="rgb(214,41,21)"/><text x="81.00" y="318.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:116) (665 samples, 0.77%)</title><rect x="73" y="244" width="9" height="15" fill="rgb(224,11,0)"/><text x="76.00" y="254.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:190) (178 samples, 0.21%)</title><rect x="82" y="260" width="3" height="15" fill="rgb(215,15,24)"/><text x="85.00" y="270.50"></text></g><g><title>shape (pandas/core/internals/managers.py:141) (88 samples, 0.10%)</title><rect x="84" y="276" width="1" height="15" fill="rgb(207,55,35)"/><text x="87.00" y="286.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:191) (86 samples, 0.10%)</title><rect x="85" y="260" width="1" height="15" fill="rgb(210,151,20)"/><text x="88.00" y="270.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:197) (77 samples, 0.09%)</title><rect x="87" y="260" width="1" height="15" fill="rgb(215,50,44)"/><text x="90.00" y="270.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:198) (134 samples, 0.16%)</title><rect x="88" y="260" width="2" height="15" fill="rgb(224,213,37)"/><text x="91.00" y="270.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:200) (278 samples, 0.32%)</title><rect x="90" y="260" width="4" height="15" fill="rgb(241,218,27)"/><text x="93.00" y="270.50"></text></g><g><title>_any (numpy/core/_methods.py:43) (136 samples, 0.16%)</title><rect x="92" y="276" width="2" height="15" fill="rgb(241,21,20)"/><text x="95.00" y="286.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:118) (852 samples, 0.99%)</title><rect x="82" y="244" width="12" height="15" fill="rgb(238,15,4)"/><text x="85.00" y="254.50"></text></g><g><title>get_slice (pandas/core/internals/managers.py:699) (1,628 samples, 1.88%)</title><rect x="72" y="228" width="23" height="15" fill="rgb(206,97,7)"/><text x="75.00" y="238.50">g..</text></g><g><title>_slice (pandas/core/generic.py:3162) (3,796 samples, 4.39%)</title><rect x="43" y="212" width="52" height="15" fill="rgb(237,4,19)"/><text x="46.00" y="222.50">_slic..</text></g><g><title>get_iterator (pandas/core/groupby/ops.py:145) (4,486 samples, 5.19%)</title><rect x="35" y="100" width="62" height="15" fill="rgb(219,66,18)"/><text x="38.00" y="110.50">get_it..</text></g><g><title>__iter__ (pandas/core/groupby/ops.py:828) (4,432 samples, 5.13%)</title><rect x="36" y="116" width="61" height="15" fill="rgb(222,136,50)"/><text x="39.00" y="126.50">__iter..</text></g><g><title>_chop (pandas/core/groupby/ops.py:864) (4,395 samples, 5.09%)</title><rect x="37" y="132" width="60" height="15" fill="rgb(208,10,23)"/><text x="40.00" y="142.50">_chop ..</text></g><g><title>__getitem__ (pandas/core/indexing.py:1500) (4,306 samples, 4.98%)</title><rect x="38" y="148" width="59" height="15" fill="rgb(218,10,4)"/><text x="41.00" y="158.50">__geti..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:2210) (4,291 samples, 4.97%)</title><rect x="38" y="164" width="59" height="15" fill="rgb(227,83,54)"/><text x="41.00" y="174.50">_getit..</text></g><g><title>_get_slice_axis (pandas/core/indexing.py:2180) (4,004 samples, 4.63%)</title><rect x="42" y="180" width="55" height="15" fill="rgb(227,76,22)"/><text x="45.00" y="190.50">_get_..</text></g><g><title>_slice (pandas/core/indexing.py:151) (3,984 samples, 4.61%)</title><rect x="42" y="196" width="55" height="15" fill="rgb(247,128,52)"/><text x="45.00" y="206.50">_slic..</text></g><g><title>_slice (pandas/core/generic.py:3168) (78 samples, 0.09%)</title><rect x="96" y="212" width="1" height="15" fill="rgb(219,212,43)"/><text x="99.00" y="222.50"></text></g><g><title>drop_primary_dups (autonormalize/normalize.py:179) (4,677 samples, 5.41%)</title><rect x="33" y="84" width="64" height="15" fill="rgb(244,46,30)"/><text x="36.00" y="94.50">drop_pr..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:2215) (161 samples, 0.19%)</title><rect x="101" y="116" width="2" height="15" fill="rgb(251,49,13)"/><text x="104.00" y="126.50"></text></g><g><title>_validate_integer (pandas/core/indexing.py:2137) (114 samples, 0.13%)</title><rect x="103" y="132" width="2" height="15" fill="rgb(253,179,46)"/><text x="106.00" y="142.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:2230) (128 samples, 0.15%)</title><rect x="103" y="116" width="2" height="15" fill="rgb(232,202,14)"/><text x="106.00" y="126.50"></text></g><g><title>_ixs (pandas/core/frame.py:2845) (115 samples, 0.13%)</title><rect x="106" y="148" width="1" height="15" fill="rgb(251,2,14)"/><text x="109.00" y="158.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1097) (97 samples, 0.11%)</title><rect x="109" y="196" width="1" height="15" fill="rgb(233,117,19)"/><text x="112.00" y="206.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1112) (173 samples, 0.20%)</title><rect x="112" y="196" width="3" height="15" fill="rgb(209,1,45)"/><text x="115.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/dtypes/cast.py:1112) (159 samples, 0.18%)</title><rect x="113" y="212" width="2" height="15" fill="rgb(206,56,40)"/><text x="116.00" y="222.50"></text></g><g><title>_can_coerce_all (numpy/core/numerictypes.py:586) (156 samples, 0.18%)</title><rect x="116" y="228" width="2" height="15" fill="rgb(245,204,3)"/><text x="119.00" y="238.50"></text></g><g><title>_can_coerce_all (numpy/core/numerictypes.py:587) (192 samples, 0.22%)</title><rect x="118" y="228" width="3" height="15" fill="rgb(206,217,23)"/><text x="121.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (numpy/core/numerictypes.py:587) (75 samples, 0.09%)</title><rect x="120" y="244" width="1" height="15" fill="rgb(211,112,32)"/><text x="123.00" y="254.50"></text></g><g><title>find_common_type (numpy/core/numerictypes.py:657) (426 samples, 0.49%)</title><rect x="116" y="212" width="5" height="15" fill="rgb(207,86,17)"/><text x="119.00" y="222.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:889) (993 samples, 1.15%)</title><rect x="108" y="164" width="14" height="15" fill="rgb(211,31,49)"/><text x="111.00" y="174.50"></text></g><g><title>_interleaved_dtype (pandas/core/internals/managers.py:1884) (982 samples, 1.14%)</title><rect x="108" y="180" width="14" height="15" fill="rgb(241,29,44)"/><text x="111.00" y="190.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1120) (497 samples, 0.58%)</title><rect x="115" y="196" width="7" height="15" fill="rgb(215,35,7)"/><text x="118.00" y="206.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:901) (121 samples, 0.14%)</title><rect x="123" y="164" width="2" height="15" fill="rgb(243,210,32)"/><text x="126.00" y="174.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:902) (113 samples, 0.13%)</title><rect x="125" y="164" width="2" height="15" fill="rgb(218,11,52)"/><text x="128.00" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:2851) (1,452 samples, 1.68%)</title><rect x="107" y="148" width="20" height="15" fill="rgb(235,176,18)"/><text x="110.00" y="158.50"></text></g><g><title>_ixs (pandas/core/frame.py:2852) (123 samples, 0.14%)</title><rect x="127" y="148" width="2" height="15" fill="rgb(216,60,41)"/><text x="130.00" y="158.50"></text></g><g><title>_ixs (pandas/core/frame.py:2860) (91 samples, 0.11%)</title><rect x="129" y="148" width="1" height="15" fill="rgb(205,124,36)"/><text x="132.00" y="158.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (87 samples, 0.10%)</title><rect x="137" y="228" width="1" height="15" fill="rgb(215,154,43)"/><text x="140.00" y="238.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (214 samples, 0.25%)</title><rect x="136" y="196" width="3" height="15" fill="rgb(254,154,17)"/><text x="139.00" y="206.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (196 samples, 0.23%)</title><rect x="136" y="212" width="3" height="15" fill="rgb(223,6,36)"/><text x="139.00" y="222.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:965) (75 samples, 0.09%)</title><rect x="142" y="212" width="1" height="15" fill="rgb(225,82,17)"/><text x="145.00" y="222.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:697) (321 samples, 0.37%)</title><rect x="139" y="196" width="5" height="15" fill="rgb(223,79,33)"/><text x="142.00" y="206.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1693) (86 samples, 0.10%)</title><rect x="145" y="212" width="1" height="15" fill="rgb(232,126,16)"/><text x="148.00" y="222.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (82 samples, 0.09%)</title><rect x="145" y="228" width="1" height="15" fill="rgb(234,64,7)"/><text x="148.00" y="238.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:704) (197 samples, 0.23%)</title><rect x="145" y="196" width="3" height="15" fill="rgb(224,95,45)"/><text x="148.00" y="206.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:572) (940 samples, 1.09%)</title><rect x="135" y="180" width="13" height="15" fill="rgb(233,80,43)"/><text x="138.00" y="190.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:673) (75 samples, 0.09%)</title><rect x="149" y="180" width="1" height="15" fill="rgb(213,153,53)"/><text x="152.00" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (1,200 samples, 1.39%)</title><rect x="133" y="164" width="17" height="15" fill="rgb(240,78,40)"/><text x="136.00" y="174.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (146 samples, 0.17%)</title><rect x="153" y="212" width="2" height="15" fill="rgb(247,190,41)"/><text x="156.00" y="222.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (377 samples, 0.44%)</title><rect x="151" y="196" width="5" height="15" fill="rgb(244,7,39)"/><text x="154.00" y="206.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (550 samples, 0.64%)</title><rect x="151" y="180" width="7" height="15" fill="rgb(247,24,38)"/><text x="154.00" y="190.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (140 samples, 0.16%)</title><rect x="156" y="196" width="2" height="15" fill="rgb(233,118,5)"/><text x="159.00" y="206.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (91 samples, 0.11%)</title><rect x="157" y="212" width="1" height="15" fill="rgb(240,171,32)"/><text x="160.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (615 samples, 0.71%)</title><rect x="150" y="164" width="8" height="15" fill="rgb(222,106,46)"/><text x="153.00" y="174.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (77 samples, 0.09%)</title><rect x="159" y="180" width="1" height="15" fill="rgb(241,208,17)"/><text x="162.00" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (138 samples, 0.16%)</title><rect x="159" y="164" width="2" height="15" fill="rgb(225,168,10)"/><text x="162.00" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:2861) (2,291 samples, 2.65%)</title><rect x="130" y="148" width="32" height="15" fill="rgb(244,193,35)"/><text x="133.00" y="158.50">_i..</text></g><g><title>__getitem__ (pandas/core/indexing.py:1500) (4,557 samples, 5.27%)</title><rect x="100" y="100" width="62" height="15" fill="rgb(209,3,33)"/><text x="103.00" y="110.50">__geti..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:2232) (4,203 samples, 4.86%)</title><rect x="105" y="116" width="57" height="15" fill="rgb(229,199,31)"/><text x="108.00" y="126.50">_getit..</text></g><g><title>_get_loc (pandas/core/indexing.py:146) (4,184 samples, 4.84%)</title><rect x="105" y="132" width="57" height="15" fill="rgb(219,66,41)"/><text x="108.00" y="142.50">_get_l..</text></g><g><title>apply (pandas/core/frame.py:6477) (75 samples, 0.09%)</title><rect x="165" y="116" width="1" height="15" fill="rgb(236,10,25)"/><text x="168.00" y="126.50"></text></g><g><title>apply (pandas/core/frame.py:6486) (167 samples, 0.19%)</title><rect x="166" y="116" width="2" height="15" fill="rgb(211,105,34)"/><text x="169.00" y="126.50"></text></g><g><title>frame_apply (pandas/core/apply.py:31) (102 samples, 0.12%)</title><rect x="167" y="132" width="1" height="15" fill="rgb(219,146,8)"/><text x="170.00" y="142.50"></text></g><g><title>get_result (pandas/core/apply.py:113) (114 samples, 0.13%)</title><rect x="168" y="132" width="2" height="15" fill="rgb(219,117,8)"/><text x="171.00" y="142.50"></text></g><g><title>seterr (numpy/core/numeric.py:2737) (78 samples, 0.09%)</title><rect x="178" y="196" width="1" height="15" fill="rgb(212,222,17)"/><text x="181.00" y="206.50"></text></g><g><title>__enter__ (numpy/core/numeric.py:3059) (188 samples, 0.22%)</title><rect x="177" y="180" width="3" height="15" fill="rgb(222,147,40)"/><text x="180.00" y="190.50"></text></g><g><title>apply (pandas/core/series.py:3582) (273 samples, 0.32%)</title><rect x="177" y="164" width="3" height="15" fill="rgb(206,115,0)"/><text x="180.00" y="174.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1693) (96 samples, 0.11%)</title><rect x="181" y="180" width="2" height="15" fill="rgb(240,34,12)"/><text x="184.00" y="190.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (91 samples, 0.11%)</title><rect x="181" y="196" width="2" height="15" fill="rgb(234,177,6)"/><text x="184.00" y="206.50"></text></g><g><title>apply (pandas/core/series.py:3587) (248 samples, 0.29%)</title><rect x="181" y="164" width="3" height="15" fill="rgb(247,146,49)"/><text x="184.00" y="174.50"></text></g><g><title>astype (pandas/core/generic.py:5658) (84 samples, 0.10%)</title><rect x="185" y="180" width="1" height="15" fill="rgb(215,171,35)"/><text x="188.00" y="190.50"></text></g><g><title>is_categorical_astype (pandas/core/internals/blocks.py:156) (160 samples, 0.19%)</title><rect x="191" y="260" width="2" height="15" fill="rgb(226,110,17)"/><text x="194.00" y="270.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (152 samples, 0.18%)</title><rect x="191" y="276" width="2" height="15" fill="rgb(226,179,31)"/><text x="194.00" y="286.50"></text></g><g><title>_astype (pandas/core/internals/blocks.py:568) (180 samples, 0.21%)</title><rect x="190" y="244" width="3" height="15" fill="rgb(216,114,53)"/><text x="193.00" y="254.50"></text></g><g><title>_astype (pandas/core/internals/blocks.py:595) (138 samples, 0.16%)</title><rect x="193" y="244" width="2" height="15" fill="rgb(242,174,9)"/><text x="196.00" y="254.50"></text></g><g><title>apply (pandas/core/internals/managers.py:395) (708 samples, 0.82%)</title><rect x="189" y="212" width="10" height="15" fill="rgb(213,24,2)"/><text x="192.00" y="222.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:534) (674 samples, 0.78%)</title><rect x="190" y="228" width="9" height="15" fill="rgb(227,155,43)"/><text x="193.00" y="238.50"></text></g><g><title>_astype (pandas/core/internals/blocks.py:599) (242 samples, 0.28%)</title><rect x="195" y="244" width="4" height="15" fill="rgb(208,68,9)"/><text x="198.00" y="254.50"></text></g><g><title>copy (pandas/core/internals/blocks.py:754) (184 samples, 0.21%)</title><rect x="196" y="260" width="3" height="15" fill="rgb(241,154,52)"/><text x="199.00" y="270.50"></text></g><g><title>make_block_same_class (pandas/core/internals/blocks.py:235) (156 samples, 0.18%)</title><rect x="197" y="276" width="2" height="15" fill="rgb(221,19,23)"/><text x="200.00" y="286.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (135 samples, 0.16%)</title><rect x="197" y="292" width="2" height="15" fill="rgb(221,179,2)"/><text x="200.00" y="302.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (75 samples, 0.09%)</title><rect x="198" y="308" width="1" height="15" fill="rgb(252,154,39)"/><text x="201.00" y="318.50"></text></g><g><title>apply (pandas/core/internals/managers.py:396) (101 samples, 0.12%)</title><rect x="199" y="212" width="1" height="15" fill="rgb(210,143,9)"/><text x="202.00" y="222.50"></text></g><g><title>astype (pandas/core/generic.py:5691) (1,047 samples, 1.21%)</title><rect x="187" y="180" width="14" height="15" fill="rgb(253,209,22)"/><text x="190.00" y="190.50"></text></g><g><title>astype (pandas/core/internals/managers.py:531) (1,022 samples, 1.18%)</title><rect x="187" y="196" width="14" height="15" fill="rgb(221,53,6)"/><text x="190.00" y="206.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (76 samples, 0.09%)</title><rect x="206" y="212" width="1" height="15" fill="rgb(233,5,34)"/><text x="209.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (123 samples, 0.14%)</title><rect x="205" y="196" width="2" height="15" fill="rgb(221,143,39)"/><text x="208.00" y="206.50"></text></g><g><title>astype (pandas/core/generic.py:5692) (483 samples, 0.56%)</title><rect x="201" y="180" width="7" height="15" fill="rgb(219,27,7)"/><text x="204.00" y="190.50"></text></g><g><title>apply (pandas/core/series.py:3590) (1,799 samples, 2.08%)</title><rect x="184" y="164" width="24" height="15" fill="rgb(234,155,44)"/><text x="187.00" y="174.50">a..</text></g><g><title>__exit__ (numpy/core/numeric.py:3064) (142 samples, 0.16%)</title><rect x="219" y="180" width="2" height="15" fill="rgb(245,74,53)"/><text x="222.00" y="190.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (146 samples, 0.17%)</title><rect x="223" y="228" width="2" height="15" fill="rgb(211,105,42)"/><text x="226.00" y="238.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1693) (280 samples, 0.32%)</title><rect x="221" y="180" width="4" height="15" fill="rgb(231,148,46)"/><text x="224.00" y="190.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (269 samples, 0.31%)</title><rect x="222" y="196" width="3" height="15" fill="rgb(248,205,35)"/><text x="225.00" y="206.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (185 samples, 0.21%)</title><rect x="223" y="212" width="2" height="15" fill="rgb(235,73,8)"/><text x="226.00" y="222.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:216) (163 samples, 0.19%)</title><rect x="225" y="196" width="3" height="15" fill="rgb(227,195,14)"/><text x="228.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (102 samples, 0.12%)</title><rect x="226" y="212" width="2" height="15" fill="rgb(221,47,43)"/><text x="229.00" y="222.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1695) (206 samples, 0.24%)</title><rect x="225" y="180" width="3" height="15" fill="rgb(245,117,24)"/><text x="228.00" y="190.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (153 samples, 0.18%)</title><rect x="229" y="212" width="2" height="15" fill="rgb(241,19,21)"/><text x="232.00" y="222.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1697) (200 samples, 0.23%)</title><rect x="228" y="180" width="3" height="15" fill="rgb(249,160,46)"/><text x="231.00" y="190.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (188 samples, 0.22%)</title><rect x="228" y="196" width="3" height="15" fill="rgb(233,51,12)"/><text x="231.00" y="206.50"></text></g><g><title>apply (pandas/core/series.py:3591) (1,654 samples, 1.91%)</title><rect x="208" y="164" width="23" height="15" fill="rgb(236,13,16)"/><text x="211.00" y="174.50">a..</text></g><g><title>_name_get (numpy/core/_dtype.py:334) (96 samples, 0.11%)</title><rect x="238" y="244" width="1" height="15" fill="rgb(234,187,6)"/><text x="241.00" y="254.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (242 samples, 0.28%)</title><rect x="236" y="212" width="3" height="15" fill="rgb(228,127,17)"/><text x="239.00" y="222.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (223 samples, 0.26%)</title><rect x="236" y="228" width="3" height="15" fill="rgb(218,82,6)"/><text x="239.00" y="238.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:582) (247 samples, 0.29%)</title><rect x="236" y="196" width="3" height="15" fill="rgb(223,196,3)"/><text x="239.00" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (447 samples, 0.52%)</title><rect x="235" y="180" width="6" height="15" fill="rgb(209,198,26)"/><text x="238.00" y="190.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3050) (77 samples, 0.09%)</title><rect x="242" y="228" width="1" height="15" fill="rgb(215,67,8)"/><text x="245.00" y="238.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3053) (86 samples, 0.10%)</title><rect x="243" y="228" width="1" height="15" fill="rgb(212,120,4)"/><text x="246.00" y="238.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (81 samples, 0.09%)</title><rect x="243" y="244" width="1" height="15" fill="rgb(209,53,1)"/><text x="246.00" y="254.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (83 samples, 0.10%)</title><rect x="245" y="244" width="1" height="15" fill="rgb(217,211,36)"/><text x="248.00" y="254.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (162 samples, 0.19%)</title><rect x="245" y="228" width="2" height="15" fill="rgb(225,165,31)"/><text x="248.00" y="238.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (453 samples, 0.52%)</title><rect x="242" y="212" width="6" height="15" fill="rgb(246,170,0)"/><text x="245.00" y="222.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (591 samples, 0.68%)</title><rect x="242" y="196" width="8" height="15" fill="rgb(220,36,16)"/><text x="245.00" y="206.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (108 samples, 0.13%)</title><rect x="248" y="212" width="2" height="15" fill="rgb(244,145,32)"/><text x="251.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (652 samples, 0.75%)</title><rect x="241" y="180" width="9" height="15" fill="rgb(245,196,6)"/><text x="244.00" y="190.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (74 samples, 0.09%)</title><rect x="251" y="196" width="1" height="15" fill="rgb(243,170,17)"/><text x="254.00" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (129 samples, 0.15%)</title><rect x="251" y="180" width="1" height="15" fill="rgb(245,151,6)"/><text x="254.00" y="190.50"></text></g><g><title>apply (pandas/core/series.py:3598) (1,562 samples, 1.81%)</title><rect x="232" y="164" width="21" height="15" fill="rgb(229,53,36)"/><text x="235.00" y="174.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:226) (226 samples, 0.26%)</title><rect x="254" y="196" width="4" height="15" fill="rgb(218,191,15)"/><text x="257.00" y="206.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1588) (85 samples, 0.10%)</title><rect x="260" y="212" width="1" height="15" fill="rgb(206,45,12)"/><text x="263.00" y="222.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (80 samples, 0.09%)</title><rect x="260" y="228" width="1" height="15" fill="rgb(242,137,16)"/><text x="263.00" y="238.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (126 samples, 0.15%)</title><rect x="267" y="244" width="2" height="15" fill="rgb(231,192,19)"/><text x="270.00" y="254.50"></text></g><g><title>_get_take_nd_function (pandas/core/algorithms.py:1419) (295 samples, 0.34%)</title><rect x="265" y="228" width="4" height="15" fill="rgb(242,46,15)"/><text x="268.00" y="238.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1654) (356 samples, 0.41%)</title><rect x="264" y="212" width="5" height="15" fill="rgb(213,125,53)"/><text x="267.00" y="222.50"></text></g><g><title>dtypes (pandas/core/generic.py:5490) (1,298 samples, 1.50%)</title><rect x="254" y="180" width="17" height="15" fill="rgb(231,204,50)"/><text x="257.00" y="190.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:227) (1,023 samples, 1.18%)</title><rect x="258" y="196" width="13" height="15" fill="rgb(239,212,22)"/><text x="261.00" y="206.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1655) (172 samples, 0.20%)</title><rect x="269" y="212" width="2" height="15" fill="rgb(225,148,12)"/><text x="272.00" y="222.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:182) (92 samples, 0.11%)</title><rect x="272" y="212" width="2" height="15" fill="rgb(252,150,20)"/><text x="275.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:174) (109 samples, 0.13%)</title><rect x="272" y="196" width="2" height="15" fill="rgb(206,181,4)"/><text x="275.00" y="206.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (185 samples, 0.21%)</title><rect x="278" y="228" width="2" height="15" fill="rgb(212,61,37)"/><text x="281.00" y="238.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (160 samples, 0.19%)</title><rect x="278" y="244" width="2" height="15" fill="rgb(246,3,41)"/><text x="281.00" y="254.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:697) (293 samples, 0.34%)</title><rect x="281" y="228" width="4" height="15" fill="rgb(226,5,49)"/><text x="284.00" y="238.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:700) (74 samples, 0.09%)</title><rect x="285" y="228" width="1" height="15" fill="rgb(229,179,51)"/><text x="288.00" y="238.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:704) (165 samples, 0.19%)</title><rect x="286" y="228" width="3" height="15" fill="rgb(233,1,37)"/><text x="289.00" y="238.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:572) (842 samples, 0.97%)</title><rect x="278" y="212" width="11" height="15" fill="rgb(205,160,7)"/><text x="281.00" y="222.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:673) (86 samples, 0.10%)</title><rect x="290" y="212" width="1" height="15" fill="rgb(224,42,34)"/><text x="293.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (1,161 samples, 1.34%)</title><rect x="275" y="196" width="16" height="15" fill="rgb(212,195,28)"/><text x="278.00" y="206.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (142 samples, 0.16%)</title><rect x="295" y="244" width="1" height="15" fill="rgb(212,148,14)"/><text x="298.00" y="254.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (355 samples, 0.41%)</title><rect x="292" y="228" width="5" height="15" fill="rgb(249,146,2)"/><text x="295.00" y="238.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (536 samples, 0.62%)</title><rect x="292" y="212" width="7" height="15" fill="rgb(242,120,20)"/><text x="295.00" y="222.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (141 samples, 0.16%)</title><rect x="297" y="228" width="2" height="15" fill="rgb(251,177,20)"/><text x="300.00" y="238.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (92 samples, 0.11%)</title><rect x="298" y="244" width="1" height="15" fill="rgb(224,210,31)"/><text x="301.00" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (599 samples, 0.69%)</title><rect x="291" y="196" width="8" height="15" fill="rgb(216,58,34)"/><text x="294.00" y="206.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (78 samples, 0.09%)</title><rect x="300" y="212" width="1" height="15" fill="rgb(245,109,11)"/><text x="303.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (119 samples, 0.14%)</title><rect x="300" y="196" width="2" height="15" fill="rgb(229,78,4)"/><text x="303.00" y="206.50"></text></g><g><title>dtypes (pandas/core/apply.py:103) (3,619 samples, 4.19%)</title><rect x="253" y="164" width="49" height="15" fill="rgb(244,126,53)"/><text x="256.00" y="174.50">dtyp..</text></g><g><title>dtypes (pandas/core/generic.py:5491) (2,256 samples, 2.61%)</title><rect x="271" y="180" width="31" height="15" fill="rgb(221,112,12)"/><text x="274.00" y="190.50">dt..</text></g><g><title>_reduce (pandas/core/series.py:3620) (82 samples, 0.09%)</title><rect x="305" y="180" width="1" height="15" fill="rgb(235,4,12)"/><text x="308.00" y="190.50"></text></g><g><title>is_datetime64_dtype (pandas/core/dtypes/common.py:431) (76 samples, 0.09%)</title><rect x="305" y="196" width="1" height="15" fill="rgb(217,221,50)"/><text x="308.00" y="206.50"></text></g><g><title>__enter__ (numpy/core/numeric.py:3059) (124 samples, 0.14%)</title><rect x="306" y="196" width="2" height="15" fill="rgb(254,47,11)"/><text x="309.00" y="206.50"></text></g><g><title>_reduce (pandas/core/series.py:3629) (188 samples, 0.22%)</title><rect x="306" y="180" width="2" height="15" fill="rgb(225,56,46)"/><text x="309.00" y="190.50"></text></g><g><title>__exit__ (numpy/core/numeric.py:3064) (117 samples, 0.14%)</title><rect x="309" y="196" width="2" height="15" fill="rgb(243,10,45)"/><text x="312.00" y="206.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:106) (109 samples, 0.13%)</title><rect x="313" y="244" width="1" height="15" fill="rgb(254,198,53)"/><text x="316.00" y="254.50"></text></g><g><title>_isna_ndarraylike (pandas/core/dtypes/missing.py:216) (192 samples, 0.22%)</title><rect x="317" y="260" width="2" height="15" fill="rgb(243,50,31)"/><text x="320.00" y="270.50"></text></g><g><title>needs_i8_conversion (pandas/core/dtypes/common.py:1469) (84 samples, 0.10%)</title><rect x="318" y="276" width="1" height="15" fill="rgb(207,63,36)"/><text x="321.00" y="286.50"></text></g><g><title>is_period_dtype (pandas/core/dtypes/common.py:533) (80 samples, 0.09%)</title><rect x="318" y="292" width="1" height="15" fill="rgb(219,90,23)"/><text x="321.00" y="302.50"></text></g><g><title>_isna_ndarraylike (pandas/core/dtypes/missing.py:220) (128 samples, 0.15%)</title><rect x="319" y="260" width="2" height="15" fill="rgb(239,134,32)"/><text x="322.00" y="270.50"></text></g><g><title>_get_values (pandas/core/nanops.py:223) (665 samples, 0.77%)</title><rect x="312" y="212" width="9" height="15" fill="rgb(252,226,41)"/><text x="315.00" y="222.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:99) (659 samples, 0.76%)</title><rect x="312" y="228" width="9" height="15" fill="rgb(207,195,13)"/><text x="315.00" y="238.50"></text></g><g><title>_isna_new (pandas/core/dtypes/missing.py:114) (494 samples, 0.57%)</title><rect x="315" y="244" width="6" height="15" fill="rgb(214,4,46)"/><text x="318.00" y="254.50"></text></g><g><title>_get_values (pandas/core/nanops.py:225) (129 samples, 0.15%)</title><rect x="321" y="212" width="2" height="15" fill="rgb(248,58,27)"/><text x="324.00" y="222.50"></text></g><g><title>_get_values (pandas/core/nanops.py:253) (138 samples, 0.16%)</title><rect x="325" y="212" width="2" height="15" fill="rgb(217,81,37)"/><text x="328.00" y="222.50"></text></g><g><title>nanany (pandas/core/nanops.py:366) (1,172 samples, 1.36%)</title><rect x="311" y="196" width="16" height="15" fill="rgb(212,146,34)"/><text x="314.00" y="206.50"></text></g><g><title>apply_standard (pandas/core/apply.py:237) (11,418 samples, 13.22%)</title><rect x="173" y="148" width="156" height="15" fill="rgb(215,185,36)"/><text x="176.00" y="158.50">apply_standard (pand..</text></g><g><title>logical_func (pandas/core/generic.py:11032) (1,878 samples, 2.17%)</title><rect x="303" y="164" width="26" height="15" fill="rgb(245,36,36)"/><text x="306.00" y="174.50">l..</text></g><g><title>_reduce (pandas/core/series.py:3630) (1,499 samples, 1.74%)</title><rect x="308" y="180" width="21" height="15" fill="rgb(230,191,35)"/><text x="311.00" y="190.50"></text></g><g><title>nanany (pandas/core/nanops.py:367) (152 samples, 0.18%)</title><rect x="327" y="196" width="2" height="15" fill="rgb(210,114,6)"/><text x="330.00" y="206.50"></text></g><g><title>_any (numpy/core/_methods.py:43) (139 samples, 0.16%)</title><rect x="327" y="212" width="2" height="15" fill="rgb(235,86,45)"/><text x="330.00" y="222.50"></text></g><g><title>values (pandas/core/generic.py:5324) (115 samples, 0.13%)</title><rect x="330" y="180" width="2" height="15" fill="rgb(229,184,52)"/><text x="333.00" y="190.50"></text></g><g><title>_consolidate_inplace (pandas/core/generic.py:5138) (94 samples, 0.11%)</title><rect x="331" y="196" width="1" height="15" fill="rgb(254,219,52)"/><text x="334.00" y="206.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1097) (76 samples, 0.09%)</title><rect x="335" y="244" width="1" height="15" fill="rgb(215,167,0)"/><text x="338.00" y="254.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1112) (163 samples, 0.19%)</title><rect x="338" y="244" width="2" height="15" fill="rgb(222,195,41)"/><text x="341.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/dtypes/cast.py:1112) (149 samples, 0.17%)</title><rect x="338" y="260" width="2" height="15" fill="rgb(220,70,21)"/><text x="341.00" y="270.50"></text></g><g><title>_can_coerce_all (numpy/core/numerictypes.py:586) (156 samples, 0.18%)</title><rect x="342" y="276" width="2" height="15" fill="rgb(234,122,34)"/><text x="345.00" y="286.50"></text></g><g><title>_can_coerce_all (numpy/core/numerictypes.py:587) (176 samples, 0.20%)</title><rect x="344" y="276" width="2" height="15" fill="rgb(246,178,45)"/><text x="347.00" y="286.50"></text></g><g><title>find_common_type (numpy/core/numerictypes.py:657) (404 samples, 0.47%)</title><rect x="341" y="260" width="6" height="15" fill="rgb(248,174,32)"/><text x="344.00" y="270.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:778) (905 samples, 1.05%)</title><rect x="334" y="212" width="13" height="15" fill="rgb(244,97,33)"/><text x="337.00" y="222.50"></text></g><g><title>_interleaved_dtype (pandas/core/internals/managers.py:1884) (891 samples, 1.03%)</title><rect x="335" y="228" width="12" height="15" fill="rgb(229,105,53)"/><text x="338.00" y="238.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1120) (465 samples, 0.54%)</title><rect x="340" y="244" width="7" height="15" fill="rgb(236,138,45)"/><text x="343.00" y="254.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:787) (119 samples, 0.14%)</title><rect x="348" y="212" width="2" height="15" fill="rgb(229,143,29)"/><text x="351.00" y="222.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:789) (88 samples, 0.10%)</title><rect x="350" y="212" width="1" height="15" fill="rgb(229,40,40)"/><text x="353.00" y="222.50"></text></g><g><title>get_values (pandas/core/internals/blocks.py:180) (86 samples, 0.10%)</title><rect x="353" y="228" width="1" height="15" fill="rgb(247,165,46)"/><text x="356.00" y="238.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:157) (75 samples, 0.09%)</title><rect x="353" y="244" width="1" height="15" fill="rgb(231,38,30)"/><text x="356.00" y="254.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:793) (425 samples, 0.49%)</title><rect x="351" y="212" width="6" height="15" fill="rgb(253,209,43)"/><text x="354.00" y="222.50"></text></g><g><title>get_values (pandas/core/internals/blocks.py:181) (249 samples, 0.29%)</title><rect x="354" y="228" width="3" height="15" fill="rgb(246,121,36)"/><text x="357.00" y="238.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:794) (82 samples, 0.09%)</title><rect x="357" y="212" width="1" height="15" fill="rgb(206,145,20)"/><text x="360.00" y="222.50"></text></g><g><title>as_array (pandas/core/internals/managers.py:768) (1,995 samples, 2.31%)</title><rect x="333" y="196" width="27" height="15" fill="rgb(224,119,13)"/><text x="336.00" y="206.50">a..</text></g><g><title>_interleave (pandas/core/internals/managers.py:796) (156 samples, 0.18%)</title><rect x="358" y="212" width="2" height="15" fill="rgb(244,4,16)"/><text x="361.00" y="222.50"></text></g><g><title>_all (numpy/core/_methods.py:46) (142 samples, 0.16%)</title><rect x="359" y="228" width="1" height="15" fill="rgb(207,30,21)"/><text x="362.00" y="238.50"></text></g><g><title>apply_standard (pandas/core/apply.py:241) (2,277 samples, 2.64%)</title><rect x="330" y="148" width="31" height="15" fill="rgb(237,1,0)"/><text x="333.00" y="158.50">ap..</text></g><g><title>values (pandas/core/apply.py:99) (2,246 samples, 2.60%)</title><rect x="330" y="164" width="31" height="15" fill="rgb(235,92,22)"/><text x="333.00" y="174.50">va..</text></g><g><title>values (pandas/core/generic.py:5325) (2,110 samples, 2.44%)</title><rect x="332" y="180" width="29" height="15" fill="rgb(229,16,52)"/><text x="335.00" y="190.50">va..</text></g><g><title>apply_standard (pandas/core/apply.py:242) (88 samples, 0.10%)</title><rect x="361" y="148" width="1" height="15" fill="rgb(206,119,6)"/><text x="364.00" y="158.50"></text></g><g><title>apply_standard (pandas/core/apply.py:244) (86 samples, 0.10%)</title><rect x="362" y="148" width="2" height="15" fill="rgb(240,64,42)"/><text x="365.00" y="158.50"></text></g><g><title>__init__ (pandas/core/series.py:240) (83 samples, 0.10%)</title><rect x="365" y="164" width="1" height="15" fill="rgb(222,20,47)"/><text x="368.00" y="174.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (220 samples, 0.25%)</title><rect x="369" y="196" width="3" height="15" fill="rgb(249,123,36)"/><text x="372.00" y="206.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (205 samples, 0.24%)</title><rect x="369" y="212" width="3" height="15" fill="rgb(253,33,54)"/><text x="372.00" y="222.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:697) (292 samples, 0.34%)</title><rect x="372" y="196" width="4" height="15" fill="rgb(251,184,8)"/><text x="375.00" y="206.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:700) (79 samples, 0.09%)</title><rect x="376" y="196" width="1" height="15" fill="rgb(205,76,47)"/><text x="379.00" y="206.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:704) (155 samples, 0.18%)</title><rect x="377" y="196" width="3" height="15" fill="rgb(228,92,51)"/><text x="380.00" y="206.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:572) (870 samples, 1.01%)</title><rect x="368" y="180" width="12" height="15" fill="rgb(224,94,48)"/><text x="371.00" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (1,127 samples, 1.30%)</title><rect x="367" y="164" width="15" height="15" fill="rgb(211,153,17)"/><text x="370.00" y="174.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3053) (83 samples, 0.10%)</title><rect x="384" y="212" width="1" height="15" fill="rgb(254,11,28)"/><text x="387.00" y="222.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (78 samples, 0.09%)</title><rect x="384" y="228" width="1" height="15" fill="rgb(232,77,6)"/><text x="387.00" y="238.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (149 samples, 0.17%)</title><rect x="386" y="212" width="2" height="15" fill="rgb(222,166,22)"/><text x="389.00" y="222.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (394 samples, 0.46%)</title><rect x="383" y="196" width="6" height="15" fill="rgb(244,57,1)"/><text x="386.00" y="206.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (573 samples, 0.66%)</title><rect x="383" y="180" width="8" height="15" fill="rgb(230,2,2)"/><text x="386.00" y="190.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (145 samples, 0.17%)</title><rect x="389" y="196" width="2" height="15" fill="rgb(218,79,15)"/><text x="392.00" y="206.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (93 samples, 0.11%)</title><rect x="390" y="212" width="1" height="15" fill="rgb(217,124,16)"/><text x="393.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (654 samples, 0.76%)</title><rect x="382" y="164" width="9" height="15" fill="rgb(224,94,30)"/><text x="385.00" y="174.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (93 samples, 0.11%)</title><rect x="392" y="180" width="1" height="15" fill="rgb(218,193,26)"/><text x="395.00" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (146 samples, 0.17%)</title><rect x="392" y="164" width="2" height="15" fill="rgb(228,159,7)"/><text x="395.00" y="174.50"></text></g><g><title>apply_standard (pandas/core/apply.py:245) (2,255 samples, 2.61%)</title><rect x="364" y="148" width="30" height="15" fill="rgb(252,121,40)"/><text x="367.00" y="158.50">ap..</text></g><g><title>_name_get (numpy/core/_dtype.py:334) (76 samples, 0.09%)</title><rect x="406" y="228" width="1" height="15" fill="rgb(246,32,42)"/><text x="409.00" y="238.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (226 samples, 0.26%)</title><rect x="404" y="196" width="3" height="15" fill="rgb(248,153,54)"/><text x="407.00" y="206.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (211 samples, 0.24%)</title><rect x="404" y="212" width="3" height="15" fill="rgb(253,19,48)"/><text x="407.00" y="222.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1067) (309 samples, 0.36%)</title><rect x="408" y="212" width="5" height="15" fill="rgb(253,29,53)"/><text x="411.00" y="222.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:697) (459 samples, 0.53%)</title><rect x="408" y="196" width="6" height="15" fill="rgb(234,10,15)"/><text x="411.00" y="206.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:704) (170 samples, 0.20%)</title><rect x="414" y="196" width="3" height="15" fill="rgb(207,193,3)"/><text x="417.00" y="206.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:582) (962 samples, 1.11%)</title><rect x="404" y="180" width="13" height="15" fill="rgb(246,179,32)"/><text x="407.00" y="190.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:674) (288 samples, 0.33%)</title><rect x="418" y="180" width="4" height="15" fill="rgb(230,0,49)"/><text x="421.00" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (1,412 samples, 1.63%)</title><rect x="403" y="164" width="19" height="15" fill="rgb(249,166,7)"/><text x="406.00" y="174.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (76 samples, 0.09%)</title><rect x="426" y="228" width="1" height="15" fill="rgb(231,131,42)"/><text x="429.00" y="238.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (143 samples, 0.17%)</title><rect x="426" y="212" width="2" height="15" fill="rgb(221,197,15)"/><text x="429.00" y="222.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (381 samples, 0.44%)</title><rect x="423" y="196" width="5" height="15" fill="rgb(232,93,25)"/><text x="426.00" y="206.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (539 samples, 0.62%)</title><rect x="423" y="180" width="7" height="15" fill="rgb(223,89,43)"/><text x="426.00" y="190.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (129 samples, 0.15%)</title><rect x="428" y="196" width="2" height="15" fill="rgb(210,179,3)"/><text x="431.00" y="206.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (85 samples, 0.10%)</title><rect x="429" y="212" width="1" height="15" fill="rgb(249,93,22)"/><text x="432.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (592 samples, 0.69%)</title><rect x="422" y="164" width="8" height="15" fill="rgb(233,85,29)"/><text x="425.00" y="174.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (121 samples, 0.14%)</title><rect x="431" y="164" width="2" height="15" fill="rgb(224,213,52)"/><text x="434.00" y="174.50"></text></g><g><title>_ensure_arraylike (pandas/core/algorithms.py:167) (115 samples, 0.13%)</title><rect x="436" y="212" width="1" height="15" fill="rgb(213,90,46)"/><text x="439.00" y="222.50"></text></g><g><title>is_array_like (pandas/core/dtypes/inference.py:334) (109 samples, 0.13%)</title><rect x="436" y="228" width="1" height="15" fill="rgb(229,183,30)"/><text x="439.00" y="238.50"></text></g><g><title>mode (pandas/core/algorithms.py:809) (122 samples, 0.14%)</title><rect x="436" y="196" width="1" height="15" fill="rgb(230,172,10)"/><text x="439.00" y="206.50"></text></g><g><title>is_datetime64_dtype (pandas/core/dtypes/common.py:431) (103 samples, 0.12%)</title><rect x="439" y="228" width="1" height="15" fill="rgb(226,82,4)"/><text x="442.00" y="238.50"></text></g><g><title>is_datetimelike (pandas/core/dtypes/common.py:741) (184 samples, 0.21%)</title><rect x="438" y="212" width="3" height="15" fill="rgb(252,11,34)"/><text x="441.00" y="222.50"></text></g><g><title>mode (pandas/core/algorithms.py:818) (280 samples, 0.32%)</title><rect x="438" y="196" width="4" height="15" fill="rgb(224,17,43)"/><text x="441.00" y="206.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:67) (147 samples, 0.17%)</title><rect x="443" y="212" width="2" height="15" fill="rgb(251,0,10)"/><text x="446.00" y="222.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:71) (113 samples, 0.13%)</title><rect x="445" y="212" width="1" height="15" fill="rgb(224,173,38)"/><text x="448.00" y="222.50"></text></g><g><title>is_signed_integer_dtype (pandas/core/dtypes/common.py:977) (104 samples, 0.12%)</title><rect x="445" y="228" width="1" height="15" fill="rgb(241,187,24)"/><text x="448.00" y="238.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:73) (74 samples, 0.09%)</title><rect x="446" y="212" width="1" height="15" fill="rgb(233,50,40)"/><text x="449.00" y="222.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:76) (87 samples, 0.10%)</title><rect x="447" y="212" width="2" height="15" fill="rgb(224,202,25)"/><text x="450.00" y="222.50"></text></g><g><title>is_float_dtype (pandas/core/dtypes/common.py:1575) (80 samples, 0.09%)</title><rect x="448" y="228" width="1" height="15" fill="rgb(220,72,34)"/><text x="451.00" y="238.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:38) (143 samples, 0.17%)</title><rect x="457" y="292" width="2" height="15" fill="rgb(229,201,15)"/><text x="460.00" y="302.50"></text></g><g><title>array (pandas/core/base.py:862) (241 samples, 0.28%)</title><rect x="456" y="260" width="3" height="15" fill="rgb(208,57,10)"/><text x="459.00" y="270.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:140) (177 samples, 0.20%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(207,44,37)"/><text x="460.00" y="286.50"></text></g><g><title>__array__ (pandas/core/series.py:716) (521 samples, 0.60%)</title><rect x="452" y="244" width="7" height="15" fill="rgb(252,185,14)"/><text x="455.00" y="254.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:38) (129 samples, 0.15%)</title><rect x="462" y="292" width="2" height="15" fill="rgb(238,196,16)"/><text x="465.00" y="302.50"></text></g><g><title>array (pandas/core/base.py:862) (175 samples, 0.20%)</title><rect x="462" y="260" width="2" height="15" fill="rgb(239,222,7)"/><text x="465.00" y="270.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:140) (151 samples, 0.17%)</title><rect x="462" y="276" width="2" height="15" fill="rgb(224,0,34)"/><text x="465.00" y="286.50"></text></g><g><title>__array__ (pandas/core/series.py:728) (488 samples, 0.56%)</title><rect x="459" y="244" width="7" height="15" fill="rgb(235,158,54)"/><text x="462.00" y="254.50"></text></g><g><title>asarray (numpy/core/numeric.py:538) (128 samples, 0.15%)</title><rect x="464" y="260" width="2" height="15" fill="rgb(250,85,30)"/><text x="467.00" y="270.50"></text></g><g><title>mode (pandas/core/algorithms.py:822) (1,771 samples, 2.05%)</title><rect x="442" y="196" width="24" height="15" fill="rgb(252,43,49)"/><text x="445.00" y="206.50">m..</text></g><g><title>_ensure_data (pandas/core/algorithms.py:79) (1,232 samples, 1.43%)</title><rect x="450" y="212" width="16" height="15" fill="rgb(237,58,47)"/><text x="453.00" y="222.50"></text></g><g><title>asarray (numpy/core/numeric.py:538) (1,204 samples, 1.39%)</title><rect x="450" y="228" width="16" height="15" fill="rgb(222,108,44)"/><text x="453.00" y="238.50"></text></g><g><title>mode (pandas/core/algorithms.py:825) (237 samples, 0.27%)</title><rect x="467" y="196" width="3" height="15" fill="rgb(228,41,33)"/><text x="470.00" y="206.50"></text></g><g><title>mode (pandas/core/algorithms.py:827) (149 samples, 0.17%)</title><rect x="470" y="196" width="3" height="15" fill="rgb(235,186,45)"/><text x="473.00" y="206.50"></text></g><g><title>_reconstruct_data (pandas/core/algorithms.py:149) (149 samples, 0.17%)</title><rect x="474" y="212" width="2" height="15" fill="rgb(209,169,7)"/><text x="477.00" y="222.50"></text></g><g><title>is_period_dtype (pandas/core/dtypes/common.py:533) (76 samples, 0.09%)</title><rect x="475" y="228" width="1" height="15" fill="rgb(241,58,11)"/><text x="478.00" y="238.50"></text></g><g><title>mode (pandas/core/algorithms.py:831) (410 samples, 0.47%)</title><rect x="473" y="196" width="5" height="15" fill="rgb(228,228,3)"/><text x="476.00" y="206.50"></text></g><g><title>__new__ (pandas/core/indexes/range.py:123) (103 samples, 0.12%)</title><rect x="482" y="244" width="1" height="15" fill="rgb(218,17,43)"/><text x="485.00" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:239) (310 samples, 0.36%)</title><rect x="479" y="212" width="5" height="15" fill="rgb(227,12,43)"/><text x="482.00" y="222.50"></text></g><g><title>default_index (pandas/core/indexes/base.py:5410) (250 samples, 0.29%)</title><rect x="480" y="228" width="4" height="15" fill="rgb(224,136,39)"/><text x="483.00" y="238.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (186 samples, 0.22%)</title><rect x="485" y="244" width="2" height="15" fill="rgb(241,122,12)"/><text x="488.00" y="254.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (167 samples, 0.19%)</title><rect x="485" y="260" width="2" height="15" fill="rgb(238,72,5)"/><text x="488.00" y="270.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1067) (265 samples, 0.31%)</title><rect x="488" y="260" width="4" height="15" fill="rgb(228,105,9)"/><text x="491.00" y="270.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:697) (390 samples, 0.45%)</title><rect x="488" y="244" width="5" height="15" fill="rgb(251,72,0)"/><text x="491.00" y="254.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1693) (81 samples, 0.09%)</title><rect x="494" y="260" width="1" height="15" fill="rgb(206,157,33)"/><text x="497.00" y="270.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (80 samples, 0.09%)</title><rect x="494" y="276" width="1" height="15" fill="rgb(224,91,44)"/><text x="497.00" y="286.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:704) (176 samples, 0.20%)</title><rect x="494" y="244" width="2" height="15" fill="rgb(215,211,32)"/><text x="497.00" y="254.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:582) (850 samples, 0.98%)</title><rect x="485" y="228" width="11" height="15" fill="rgb(207,78,14)"/><text x="488.00" y="238.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:674) (258 samples, 0.30%)</title><rect x="498" y="228" width="3" height="15" fill="rgb(245,31,8)"/><text x="501.00" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (1,297 samples, 1.50%)</title><rect x="484" y="212" width="17" height="15" fill="rgb(210,47,43)"/><text x="487.00" y="222.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (116 samples, 0.13%)</title><rect x="505" y="260" width="2" height="15" fill="rgb(212,118,54)"/><text x="508.00" y="270.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (370 samples, 0.43%)</title><rect x="503" y="244" width="5" height="15" fill="rgb(237,75,48)"/><text x="506.00" y="254.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (564 samples, 0.65%)</title><rect x="502" y="228" width="8" height="15" fill="rgb(234,23,18)"/><text x="505.00" y="238.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (146 samples, 0.17%)</title><rect x="508" y="244" width="2" height="15" fill="rgb(224,208,41)"/><text x="511.00" y="254.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (93 samples, 0.11%)</title><rect x="509" y="260" width="1" height="15" fill="rgb(242,137,5)"/><text x="512.00" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (634 samples, 0.73%)</title><rect x="501" y="212" width="9" height="15" fill="rgb(224,102,5)"/><text x="504.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (121 samples, 0.14%)</title><rect x="511" y="212" width="1" height="15" fill="rgb(211,43,24)"/><text x="514.00" y="222.50"></text></g><g><title>f (pandas/core/frame.py:7693) (5,757 samples, 6.66%)</title><rect x="435" y="164" width="78" height="15" fill="rgb(247,226,30)"/><text x="438.00" y="174.50">f (pandas..</text></g><g><title>mode (pandas/core/series.py:1610) (5,747 samples, 6.65%)</title><rect x="435" y="180" width="78" height="15" fill="rgb(225,183,1)"/><text x="438.00" y="190.50">mode (pan..</text></g><g><title>mode (pandas/core/algorithms.py:832) (2,569 samples, 2.97%)</title><rect x="478" y="196" width="35" height="15" fill="rgb(232,54,42)"/><text x="481.00" y="206.50">mo..</text></g><g><title>apply_standard (pandas/core/apply.py:251) (8,848 samples, 10.24%)</title><rect x="395" y="148" width="121" height="15" fill="rgb(222,18,41)"/><text x="398.00" y="158.50">apply_standard ..</text></g><g><title>values (pandas/core/series.py:474) (115 samples, 0.13%)</title><rect x="514" y="164" width="2" height="15" fill="rgb(226,56,32)"/><text x="517.00" y="174.50"></text></g><g><title>external_values (pandas/core/internals/managers.py:1547) (85 samples, 0.10%)</title><rect x="514" y="180" width="2" height="15" fill="rgb(209,80,22)"/><text x="517.00" y="190.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:263) (117 samples, 0.14%)</title><rect x="517" y="164" width="1" height="15" fill="rgb(240,33,46)"/><text x="520.00" y="174.50"></text></g><g><title>series_generator (pandas/core/apply.py:326) (89 samples, 0.10%)</title><rect x="517" y="180" width="1" height="15" fill="rgb(236,109,9)"/><text x="520.00" y="190.50"></text></g><g><title>__getitem__ (pandas/core/indexes/base.py:3957) (108 samples, 0.13%)</title><rect x="526" y="212" width="2" height="15" fill="rgb(240,82,13)"/><text x="529.00" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:2867) (375 samples, 0.43%)</title><rect x="524" y="196" width="5" height="15" fill="rgb(247,115,9)"/><text x="527.00" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexes/base.py:3958) (75 samples, 0.09%)</title><rect x="528" y="212" width="1" height="15" fill="rgb(226,186,53)"/><text x="531.00" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:2876) (119 samples, 0.14%)</title><rect x="530" y="196" width="1" height="15" fill="rgb(239,215,35)"/><text x="533.00" y="206.50"></text></g><g><title>iget (pandas/core/internals/managers.py:969) (133 samples, 0.15%)</title><rect x="532" y="212" width="2" height="15" fill="rgb(224,154,25)"/><text x="535.00" y="222.50"></text></g><g><title>iget (pandas/core/internals/managers.py:970) (163 samples, 0.19%)</title><rect x="534" y="212" width="2" height="15" fill="rgb(220,153,31)"/><text x="537.00" y="222.50"></text></g><g><title>iget (pandas/core/internals/blocks.py:333) (89 samples, 0.10%)</title><rect x="535" y="228" width="1" height="15" fill="rgb(235,81,53)"/><text x="538.00" y="238.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:80) (84 samples, 0.10%)</title><rect x="543" y="276" width="1" height="15" fill="rgb(251,77,34)"/><text x="546.00" y="286.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (201 samples, 0.23%)</title><rect x="542" y="260" width="3" height="15" fill="rgb(230,132,50)"/><text x="545.00" y="270.50"></text></g><g><title>iget (pandas/core/internals/managers.py:978) (650 samples, 0.75%)</title><rect x="538" y="212" width="9" height="15" fill="rgb(250,41,6)"/><text x="541.00" y="222.50"></text></g><g><title>make_block_same_class (pandas/core/internals/blocks.py:235) (596 samples, 0.69%)</title><rect x="538" y="228" width="9" height="15" fill="rgb(244,155,40)"/><text x="541.00" y="238.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (524 samples, 0.61%)</title><rect x="539" y="244" width="8" height="15" fill="rgb(218,19,3)"/><text x="542.00" y="254.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1445) (103 samples, 0.12%)</title><rect x="548" y="228" width="1" height="15" fill="rgb(233,213,21)"/><text x="551.00" y="238.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1464) (101 samples, 0.12%)</title><rect x="549" y="228" width="2" height="15" fill="rgb(217,113,3)"/><text x="552.00" y="238.50"></text></g><g><title>_ixs (pandas/core/frame.py:2882) (1,513 samples, 1.75%)</title><rect x="531" y="196" width="21" height="15" fill="rgb(222,136,54)"/><text x="534.00" y="206.50"></text></g><g><title>iget (pandas/core/internals/managers.py:979) (406 samples, 0.47%)</title><rect x="547" y="212" width="5" height="15" fill="rgb(241,121,8)"/><text x="550.00" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:2884) (166 samples, 0.19%)</title><rect x="552" y="196" width="2" height="15" fill="rgb(220,209,23)"/><text x="555.00" y="206.50"></text></g><g><title>__len__ (pandas/core/internals/managers.py:292) (91 samples, 0.11%)</title><rect x="553" y="212" width="1" height="15" fill="rgb(240,193,2)"/><text x="556.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:266) (176 samples, 0.20%)</title><rect x="558" y="228" width="3" height="15" fill="rgb(242,14,0)"/><text x="561.00" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (328 samples, 0.38%)</title><rect x="561" y="244" width="5" height="15" fill="rgb(254,224,42)"/><text x="564.00" y="254.50"></text></g><g><title>name (pandas/core/series.py:397) (247 samples, 0.29%)</title><rect x="562" y="260" width="4" height="15" fill="rgb(220,56,22)"/><text x="565.00" y="270.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:5063) (77 samples, 0.09%)</title><rect x="565" y="276" width="1" height="15" fill="rgb(221,199,24)"/><text x="568.00" y="286.50"></text></g><g><title>name (pandas/core/series.py:401) (82 samples, 0.09%)</title><rect x="567" y="260" width="2" height="15" fill="rgb(239,121,28)"/><text x="570.00" y="270.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5089) (169 samples, 0.20%)</title><rect x="567" y="244" width="2" height="15" fill="rgb(219,108,52)"/><text x="570.00" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (624 samples, 0.72%)</title><rect x="561" y="228" width="8" height="15" fill="rgb(212,11,35)"/><text x="564.00" y="238.50"></text></g><g><title>_set_axis (pandas/core/series.py:376) (74 samples, 0.09%)</title><rect x="570" y="244" width="2" height="15" fill="rgb(218,59,3)"/><text x="573.00" y="254.50"></text></g><g><title>_ixs (pandas/core/frame.py:2886) (1,278 samples, 1.48%)</title><rect x="554" y="196" width="18" height="15" fill="rgb(237,49,9)"/><text x="557.00" y="206.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:3354) (1,179 samples, 1.36%)</title><rect x="556" y="212" width="16" height="15" fill="rgb(254,200,19)"/><text x="559.00" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:269) (197 samples, 0.23%)</title><rect x="569" y="228" width="3" height="15" fill="rgb(238,157,42)"/><text x="572.00" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (88 samples, 0.10%)</title><rect x="574" y="228" width="1" height="15" fill="rgb(218,123,46)"/><text x="577.00" y="238.50"></text></g><g><title>_ixs (pandas/core/frame.py:2889) (295 samples, 0.34%)</title><rect x="572" y="196" width="4" height="15" fill="rgb(225,2,37)"/><text x="575.00" y="206.50"></text></g><g><title>_set_as_cached (pandas/core/generic.py:3074) (254 samples, 0.29%)</title><rect x="572" y="212" width="4" height="15" fill="rgb(244,207,14)"/><text x="575.00" y="222.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:285) (4,185 samples, 4.84%)</title><rect x="519" y="164" width="57" height="15" fill="rgb(222,218,5)"/><text x="522.00" y="174.50">apply_..</text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:326) (3,951 samples, 4.57%)</title><rect x="522" y="180" width="54" height="15" fill="rgb(226,75,19)"/><text x="525.00" y="190.50">&lt;gene..</text></g><g><title>mode (pandas/core/algorithms.py:807) (264 samples, 0.31%)</title><rect x="580" y="212" width="3" height="15" fill="rgb(248,125,18)"/><text x="583.00" y="222.50"></text></g><g><title>dtype (pandas/core/series.py:411) (134 samples, 0.16%)</title><rect x="585" y="260" width="2" height="15" fill="rgb(205,111,19)"/><text x="588.00" y="270.50"></text></g><g><title>dtype (pandas/core/internals/managers.py:1524) (92 samples, 0.11%)</title><rect x="586" y="276" width="1" height="15" fill="rgb(237,46,26)"/><text x="589.00" y="286.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:293) (196 samples, 0.23%)</title><rect x="587" y="260" width="3" height="15" fill="rgb(235,126,45)"/><text x="590.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (93 samples, 0.11%)</title><rect x="588" y="276" width="2" height="15" fill="rgb(242,91,33)"/><text x="591.00" y="286.50"></text></g><g><title>_ensure_arraylike (pandas/core/algorithms.py:167) (531 samples, 0.61%)</title><rect x="584" y="228" width="7" height="15" fill="rgb(215,223,39)"/><text x="587.00" y="238.50"></text></g><g><title>is_array_like (pandas/core/dtypes/inference.py:334) (502 samples, 0.58%)</title><rect x="584" y="244" width="7" height="15" fill="rgb(214,189,40)"/><text x="587.00" y="254.50"></text></g><g><title>mode (pandas/core/algorithms.py:809) (570 samples, 0.66%)</title><rect x="583" y="212" width="8" height="15" fill="rgb(217,70,34)"/><text x="586.00" y="222.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (199 samples, 0.23%)</title><rect x="592" y="244" width="3" height="15" fill="rgb(219,53,32)"/><text x="595.00" y="254.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (88 samples, 0.10%)</title><rect x="594" y="260" width="1" height="15" fill="rgb(253,15,8)"/><text x="597.00" y="270.50"></text></g><g><title>mode (pandas/core/algorithms.py:813) (413 samples, 0.48%)</title><rect x="591" y="212" width="6" height="15" fill="rgb(245,222,27)"/><text x="594.00" y="222.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (375 samples, 0.43%)</title><rect x="592" y="228" width="5" height="15" fill="rgb(239,198,39)"/><text x="595.00" y="238.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:98) (108 samples, 0.13%)</title><rect x="595" y="244" width="2" height="15" fill="rgb(218,23,54)"/><text x="598.00" y="254.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1874) (107 samples, 0.12%)</title><rect x="600" y="260" width="1" height="15" fill="rgb(241,102,41)"/><text x="603.00" y="270.50"></text></g><g><title>dtype (pandas/core/series.py:411) (75 samples, 0.09%)</title><rect x="600" y="276" width="1" height="15" fill="rgb(231,196,38)"/><text x="603.00" y="286.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1882) (101 samples, 0.12%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(250,47,11)"/><text x="605.00" y="270.50"></text></g><g><title>is_datetime64_dtype (pandas/core/dtypes/common.py:431) (492 samples, 0.57%)</title><rect x="598" y="244" width="6" height="15" fill="rgb(218,10,40)"/><text x="601.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (167 samples, 0.19%)</title><rect x="605" y="260" width="2" height="15" fill="rgb(205,212,48)"/><text x="608.00" y="270.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (76 samples, 0.09%)</title><rect x="606" y="276" width="1" height="15" fill="rgb(232,146,19)"/><text x="609.00" y="286.50"></text></g><g><title>is_datetimelike (pandas/core/dtypes/common.py:741) (847 samples, 0.98%)</title><rect x="597" y="228" width="12" height="15" fill="rgb(247,189,40)"/><text x="600.00" y="238.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (311 samples, 0.36%)</title><rect x="604" y="244" width="5" height="15" fill="rgb(236,116,12)"/><text x="607.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:98) (103 samples, 0.12%)</title><rect x="607" y="260" width="2" height="15" fill="rgb(223,31,16)"/><text x="610.00" y="270.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1874) (92 samples, 0.11%)</title><rect x="611" y="260" width="1" height="15" fill="rgb(246,66,21)"/><text x="614.00" y="270.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1875) (92 samples, 0.11%)</title><rect x="612" y="260" width="1" height="15" fill="rgb(231,221,2)"/><text x="615.00" y="270.50"></text></g><g><title>is_datetimelike (pandas/core/dtypes/common.py:742) (421 samples, 0.49%)</title><rect x="609" y="228" width="5" height="15" fill="rgb(222,53,35)"/><text x="612.00" y="238.50"></text></g><g><title>is_timedelta64_dtype (pandas/core/dtypes/common.py:500) (409 samples, 0.47%)</title><rect x="609" y="244" width="5" height="15" fill="rgb(228,129,16)"/><text x="612.00" y="254.50"></text></g><g><title>mode (pandas/core/algorithms.py:818) (1,373 samples, 1.59%)</title><rect x="597" y="212" width="18" height="15" fill="rgb(232,26,23)"/><text x="600.00" y="222.50"></text></g><g><title>is_datetimelike (pandas/core/dtypes/common.py:743) (76 samples, 0.09%)</title><rect x="614" y="228" width="1" height="15" fill="rgb(214,159,20)"/><text x="617.00" y="238.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:65) (170 samples, 0.20%)</title><rect x="616" y="228" width="2" height="15" fill="rgb(225,183,8)"/><text x="619.00" y="238.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:157) (141 samples, 0.16%)</title><rect x="616" y="244" width="2" height="15" fill="rgb(250,135,14)"/><text x="619.00" y="254.50"></text></g><g><title>_get_dtype (pandas/core/dtypes/common.py:1839) (105 samples, 0.12%)</title><rect x="620" y="260" width="1" height="15" fill="rgb(248,173,50)"/><text x="623.00" y="270.50"></text></g><g><title>_get_dtype (pandas/core/dtypes/common.py:1840) (74 samples, 0.09%)</title><rect x="621" y="260" width="1" height="15" fill="rgb(224,10,2)"/><text x="624.00" y="270.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1620) (316 samples, 0.37%)</title><rect x="619" y="244" width="4" height="15" fill="rgb(230,189,21)"/><text x="622.00" y="254.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1628) (99 samples, 0.11%)</title><rect x="624" y="244" width="1" height="15" fill="rgb(216,21,19)"/><text x="627.00" y="254.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1747) (99 samples, 0.11%)</title><rect x="625" y="260" width="1" height="15" fill="rgb(230,64,29)"/><text x="628.00" y="270.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1636) (280 samples, 0.32%)</title><rect x="625" y="244" width="4" height="15" fill="rgb(234,83,21)"/><text x="628.00" y="254.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1749) (149 samples, 0.17%)</title><rect x="627" y="260" width="2" height="15" fill="rgb(219,12,20)"/><text x="630.00" y="270.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:67) (785 samples, 0.91%)</title><rect x="618" y="228" width="11" height="15" fill="rgb(216,134,23)"/><text x="621.00" y="238.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1874) (93 samples, 0.11%)</title><rect x="632" y="260" width="1" height="15" fill="rgb(208,5,46)"/><text x="635.00" y="270.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1875) (78 samples, 0.09%)</title><rect x="633" y="260" width="1" height="15" fill="rgb(248,18,49)"/><text x="636.00" y="270.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:71) (506 samples, 0.59%)</title><rect x="629" y="228" width="7" height="15" fill="rgb(205,158,52)"/><text x="632.00" y="238.50"></text></g><g><title>is_signed_integer_dtype (pandas/core/dtypes/common.py:977) (462 samples, 0.53%)</title><rect x="630" y="244" width="6" height="15" fill="rgb(232,96,21)"/><text x="633.00" y="254.50"></text></g><g><title>array (pandas/core/base.py:861) (110 samples, 0.13%)</title><rect x="646" y="260" width="2" height="15" fill="rgb(238,166,30)"/><text x="649.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (77 samples, 0.09%)</title><rect x="652" y="324" width="1" height="15" fill="rgb(213,156,8)"/><text x="655.00" y="334.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (139 samples, 0.16%)</title><rect x="652" y="308" width="2" height="15" fill="rgb(234,128,14)"/><text x="655.00" y="318.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:38) (331 samples, 0.38%)</title><rect x="650" y="292" width="4" height="15" fill="rgb(205,218,1)"/><text x="653.00" y="302.50"></text></g><g><title>array (pandas/core/base.py:862) (460 samples, 0.53%)</title><rect x="648" y="260" width="6" height="15" fill="rgb(253,19,1)"/><text x="651.00" y="270.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:140) (387 samples, 0.45%)</title><rect x="649" y="276" width="5" height="15" fill="rgb(216,29,16)"/><text x="652.00" y="286.50"></text></g><g><title>__array__ (pandas/core/series.py:728) (1,165 samples, 1.35%)</title><rect x="642" y="244" width="16" height="15" fill="rgb(215,94,20)"/><text x="645.00" y="254.50"></text></g><g><title>asarray (numpy/core/numeric.py:538) (273 samples, 0.32%)</title><rect x="654" y="260" width="4" height="15" fill="rgb(236,1,15)"/><text x="657.00" y="270.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:72) (1,687 samples, 1.95%)</title><rect x="636" y="228" width="23" height="15" fill="rgb(212,107,45)"/><text x="639.00" y="238.50">_..</text></g><g><title>_ensure_data (pandas/core/algorithms.py:73) (248 samples, 0.29%)</title><rect x="659" y="228" width="3" height="15" fill="rgb(210,228,29)"/><text x="662.00" y="238.50"></text></g><g><title>is_unsigned_integer_dtype (pandas/core/dtypes/common.py:1025) (239 samples, 0.28%)</title><rect x="659" y="244" width="3" height="15" fill="rgb(230,56,46)"/><text x="662.00" y="254.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:76) (312 samples, 0.36%)</title><rect x="663" y="228" width="5" height="15" fill="rgb(206,158,4)"/><text x="666.00" y="238.50"></text></g><g><title>is_float_dtype (pandas/core/dtypes/common.py:1575) (294 samples, 0.34%)</title><rect x="664" y="244" width="4" height="15" fill="rgb(218,197,29)"/><text x="667.00" y="254.50"></text></g><g><title>_ensure_data (pandas/core/algorithms.py:78) (240 samples, 0.28%)</title><rect x="668" y="228" width="3" height="15" fill="rgb(254,176,50)"/><text x="671.00" y="238.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:157) (228 samples, 0.26%)</title><rect x="668" y="244" width="3" height="15" fill="rgb(243,11,52)"/><text x="671.00" y="254.50"></text></g><g><title>array (pandas/core/base.py:851) (90 samples, 0.10%)</title><rect x="679" y="276" width="2" height="15" fill="rgb(206,126,5)"/><text x="682.00" y="286.50"></text></g><g><title>array (pandas/core/base.py:853) (119 samples, 0.14%)</title><rect x="681" y="276" width="1" height="15" fill="rgb(228,139,24)"/><text x="684.00" y="286.50"></text></g><g><title>array (pandas/core/base.py:856) (100 samples, 0.12%)</title><rect x="682" y="276" width="2" height="15" fill="rgb(221,73,6)"/><text x="685.00" y="286.50"></text></g><g><title>is_timedelta64_ns_dtype (pandas/core/dtypes/common.py:1195) (83 samples, 0.10%)</title><rect x="683" y="292" width="1" height="15" fill="rgb(223,10,39)"/><text x="686.00" y="302.50"></text></g><g><title>array (pandas/core/base.py:860) (127 samples, 0.15%)</title><rect x="684" y="276" width="1" height="15" fill="rgb(229,125,2)"/><text x="687.00" y="286.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1749) (80 samples, 0.09%)</title><rect x="684" y="292" width="1" height="15" fill="rgb(222,19,38)"/><text x="687.00" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (77 samples, 0.09%)</title><rect x="686" y="292" width="1" height="15" fill="rgb(245,91,46)"/><text x="689.00" y="302.50"></text></g><g><title>array (pandas/core/base.py:861) (156 samples, 0.18%)</title><rect x="685" y="276" width="3" height="15" fill="rgb(231,201,35)"/><text x="688.00" y="286.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (106 samples, 0.12%)</title><rect x="694" y="340" width="2" height="15" fill="rgb(238,118,13)"/><text x="697.00" y="350.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (193 samples, 0.22%)</title><rect x="694" y="324" width="2" height="15" fill="rgb(240,11,18)"/><text x="697.00" y="334.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:38) (499 samples, 0.58%)</title><rect x="690" y="308" width="7" height="15" fill="rgb(209,76,17)"/><text x="693.00" y="318.50"></text></g><g><title>array (pandas/core/base.py:862) (689 samples, 0.80%)</title><rect x="688" y="276" width="9" height="15" fill="rgb(223,100,20)"/><text x="691.00" y="286.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:140) (588 samples, 0.68%)</title><rect x="689" y="292" width="8" height="15" fill="rgb(245,198,48)"/><text x="692.00" y="302.50"></text></g><g><title>__array__ (pandas/core/series.py:716) (1,413 samples, 1.64%)</title><rect x="678" y="260" width="19" height="15" fill="rgb(244,5,4)"/><text x="681.00" y="270.50"></text></g><g><title>array (pandas/core/base.py:851) (91 samples, 0.11%)</title><rect x="698" y="276" width="1" height="15" fill="rgb(252,37,18)"/><text x="701.00" y="286.50"></text></g><g><title>array (pandas/core/base.py:860) (92 samples, 0.11%)</title><rect x="701" y="276" width="1" height="15" fill="rgb(214,183,33)"/><text x="704.00" y="286.50"></text></g><g><title>array (pandas/core/base.py:861) (130 samples, 0.15%)</title><rect x="702" y="276" width="2" height="15" fill="rgb(210,223,31)"/><text x="705.00" y="286.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (99 samples, 0.11%)</title><rect x="709" y="340" width="1" height="15" fill="rgb(229,147,29)"/><text x="712.00" y="350.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (170 samples, 0.20%)</title><rect x="709" y="324" width="2" height="15" fill="rgb(224,160,27)"/><text x="712.00" y="334.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:38) (401 samples, 0.46%)</title><rect x="706" y="308" width="6" height="15" fill="rgb(219,135,43)"/><text x="709.00" y="318.50"></text></g><g><title>array (pandas/core/base.py:862) (571 samples, 0.66%)</title><rect x="704" y="276" width="8" height="15" fill="rgb(252,175,14)"/><text x="707.00" y="286.50"></text></g><g><title>__init__ (pandas/core/arrays/numpy_.py:140) (478 samples, 0.55%)</title><rect x="705" y="292" width="7" height="15" fill="rgb(215,29,6)"/><text x="708.00" y="302.50"></text></g><g><title>__array__ (pandas/core/series.py:728) (1,433 samples, 1.66%)</title><rect x="697" y="260" width="20" height="15" fill="rgb(231,69,39)"/><text x="700.00" y="270.50"></text></g><g><title>asarray (numpy/core/numeric.py:538) (359 samples, 0.42%)</title><rect x="712" y="276" width="5" height="15" fill="rgb(213,96,15)"/><text x="715.00" y="286.50"></text></g><g><title>mode (pandas/core/algorithms.py:822) (7,559 samples, 8.75%)</title><rect x="615" y="212" width="104" height="15" fill="rgb(240,100,44)"/><text x="618.00" y="222.50">mode (pandas..</text></g><g><title>_ensure_data (pandas/core/algorithms.py:79) (3,494 samples, 4.04%)</title><rect x="671" y="228" width="48" height="15" fill="rgb(238,57,27)"/><text x="674.00" y="238.50">_ens..</text></g><g><title>asarray (numpy/core/numeric.py:538) (3,416 samples, 3.95%)</title><rect x="672" y="244" width="47" height="15" fill="rgb(209,111,19)"/><text x="675.00" y="254.50">asar..</text></g><g><title>__getattr__ (pandas/core/generic.py:5063) (118 samples, 0.14%)</title><rect x="717" y="260" width="2" height="15" fill="rgb(233,64,17)"/><text x="720.00" y="270.50"></text></g><g><title>mode (pandas/core/algorithms.py:824) (251 samples, 0.29%)</title><rect x="719" y="212" width="3" height="15" fill="rgb(240,45,26)"/><text x="722.00" y="222.50"></text></g><g><title>mode (pandas/core/algorithms.py:825) (1,079 samples, 1.25%)</title><rect x="722" y="212" width="15" height="15" fill="rgb(249,85,41)"/><text x="725.00" y="222.50"></text></g><g><title>sort (numpy/core/fromnumeric.py:933) (301 samples, 0.35%)</title><rect x="740" y="228" width="4" height="15" fill="rgb(247,6,51)"/><text x="743.00" y="238.50"></text></g><g><title>sort (numpy/core/fromnumeric.py:934) (176 samples, 0.20%)</title><rect x="744" y="228" width="2" height="15" fill="rgb(241,213,38)"/><text x="747.00" y="238.50"></text></g><g><title>mode (pandas/core/algorithms.py:827) (684 samples, 0.79%)</title><rect x="737" y="212" width="9" height="15" fill="rgb(231,196,45)"/><text x="740.00" y="222.50"></text></g><g><title>_reconstruct_data (pandas/core/algorithms.py:146) (244 samples, 0.28%)</title><rect x="748" y="228" width="3" height="15" fill="rgb(223,6,11)"/><text x="751.00" y="238.50"></text></g><g><title>_reconstruct_data (pandas/core/algorithms.py:147) (217 samples, 0.25%)</title><rect x="751" y="228" width="3" height="15" fill="rgb(233,114,20)"/><text x="754.00" y="238.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1749) (144 samples, 0.17%)</title><rect x="752" y="244" width="2" height="15" fill="rgb(214,100,19)"/><text x="755.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (202 samples, 0.23%)</title><rect x="756" y="260" width="2" height="15" fill="rgb(205,184,36)"/><text x="759.00" y="270.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (89 samples, 0.10%)</title><rect x="757" y="276" width="1" height="15" fill="rgb(205,177,2)"/><text x="760.00" y="286.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (297 samples, 0.34%)</title><rect x="755" y="244" width="4" height="15" fill="rgb(216,134,33)"/><text x="758.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (152 samples, 0.18%)</title><rect x="762" y="276" width="2" height="15" fill="rgb(213,188,29)"/><text x="765.00" y="286.50"></text></g><g><title>_reconstruct_data (pandas/core/algorithms.py:149) (730 samples, 0.84%)</title><rect x="754" y="228" width="10" height="15" fill="rgb(224,136,27)"/><text x="757.00" y="238.50"></text></g><g><title>is_period_dtype (pandas/core/dtypes/common.py:533) (377 samples, 0.44%)</title><rect x="759" y="244" width="5" height="15" fill="rgb(227,148,34)"/><text x="762.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:847) (291 samples, 0.34%)</title><rect x="760" y="260" width="4" height="15" fill="rgb(206,23,0)"/><text x="763.00" y="270.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1636) (136 samples, 0.16%)</title><rect x="766" y="244" width="2" height="15" fill="rgb(239,89,9)"/><text x="769.00" y="254.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1749) (90 samples, 0.10%)</title><rect x="767" y="260" width="1" height="15" fill="rgb(216,196,23)"/><text x="770.00" y="270.50"></text></g><g><title>_reconstruct_data (pandas/core/algorithms.py:151) (332 samples, 0.38%)</title><rect x="764" y="228" width="4" height="15" fill="rgb(209,110,0)"/><text x="767.00" y="238.50"></text></g><g><title>_reconstruct_data (pandas/core/algorithms.py:158) (129 samples, 0.15%)</title><rect x="769" y="228" width="1" height="15" fill="rgb(231,44,38)"/><text x="772.00" y="238.50"></text></g><g><title>mode (pandas/core/algorithms.py:831) (1,944 samples, 2.25%)</title><rect x="746" y="212" width="27" height="15" fill="rgb(240,208,39)"/><text x="749.00" y="222.50">m..</text></g><g><title>dtype (pandas/core/series.py:411) (179 samples, 0.21%)</title><rect x="770" y="228" width="3" height="15" fill="rgb(251,189,47)"/><text x="773.00" y="238.50"></text></g><g><title>dtype (pandas/core/internals/managers.py:1524) (123 samples, 0.14%)</title><rect x="771" y="244" width="2" height="15" fill="rgb(236,128,13)"/><text x="774.00" y="254.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:293) (170 samples, 0.20%)</title><rect x="776" y="244" width="2" height="15" fill="rgb(221,112,39)"/><text x="779.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (88 samples, 0.10%)</title><rect x="777" y="260" width="1" height="15" fill="rgb(242,61,36)"/><text x="780.00" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:237) (292 samples, 0.34%)</title><rect x="775" y="228" width="4" height="15" fill="rgb(217,73,50)"/><text x="778.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (148 samples, 0.17%)</title><rect x="782" y="260" width="2" height="15" fill="rgb(232,20,50)"/><text x="785.00" y="270.50"></text></g><g><title>default_index (pandas/core/indexes/base.py:5409) (264 samples, 0.31%)</title><rect x="780" y="244" width="4" height="15" fill="rgb(224,112,4)"/><text x="783.00" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/range.py:104) (104 samples, 0.12%)</title><rect x="786" y="260" width="1" height="15" fill="rgb(217,111,13)"/><text x="789.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/range.py:110) (143 samples, 0.17%)</title><rect x="787" y="260" width="2" height="15" fill="rgb(241,199,49)"/><text x="790.00" y="270.50"></text></g><g><title>_simple_new (pandas/core/indexes/range.py:157) (166 samples, 0.19%)</title><rect x="793" y="276" width="2" height="15" fill="rgb(236,191,12)"/><text x="796.00" y="286.50"></text></g><g><title>iteritems (pandas/compat/__init__.py:222) (90 samples, 0.10%)</title><rect x="794" y="292" width="1" height="15" fill="rgb(206,45,23)"/><text x="797.00" y="302.50"></text></g><g><title>_simple_new (pandas/core/indexes/range.py:160) (96 samples, 0.11%)</title><rect x="795" y="276" width="2" height="15" fill="rgb(253,8,53)"/><text x="798.00" y="286.50"></text></g><g><title>__new__ (pandas/core/indexes/range.py:123) (499 samples, 0.58%)</title><rect x="790" y="260" width="7" height="15" fill="rgb(218,73,34)"/><text x="793.00" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:239) (1,379 samples, 1.60%)</title><rect x="779" y="228" width="19" height="15" fill="rgb(226,29,21)"/><text x="782.00" y="238.50"></text></g><g><title>default_index (pandas/core/indexes/base.py:5410) (1,056 samples, 1.22%)</title><rect x="784" y="244" width="14" height="15" fill="rgb(230,108,34)"/><text x="787.00" y="254.50"></text></g><g><title>extract_array (pandas/core/internals/arrays.py:49) (173 samples, 0.20%)</title><rect x="801" y="260" width="2" height="15" fill="rgb(242,189,5)"/><text x="804.00" y="270.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (78 samples, 0.09%)</title><rect x="802" y="276" width="1" height="15" fill="rgb(240,84,8)"/><text x="805.00" y="286.50"></text></g><g><title>extract_array (pandas/core/internals/arrays.py:52) (84 samples, 0.10%)</title><rect x="803" y="260" width="2" height="15" fill="rgb(251,109,18)"/><text x="806.00" y="270.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:555) (300 samples, 0.35%)</title><rect x="801" y="244" width="4" height="15" fill="rgb(252,221,37)"/><text x="804.00" y="254.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (112 samples, 0.13%)</title><rect x="815" y="324" width="1" height="15" fill="rgb(248,12,38)"/><text x="818.00" y="334.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (182 samples, 0.21%)</title><rect x="814" y="308" width="3" height="15" fill="rgb(250,155,53)"/><text x="817.00" y="318.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (308 samples, 0.36%)</title><rect x="813" y="292" width="5" height="15" fill="rgb(211,112,44)"/><text x="816.00" y="302.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:688) (906 samples, 1.05%)</title><rect x="806" y="260" width="12" height="15" fill="rgb(248,170,49)"/><text x="809.00" y="270.50"></text></g><g><title>maybe_castable (pandas/core/dtypes/cast.py:843) (837 samples, 0.97%)</title><rect x="807" y="276" width="11" height="15" fill="rgb(250,219,15)"/><text x="810.00" y="286.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:694) (193 samples, 0.22%)</title><rect x="818" y="260" width="3" height="15" fill="rgb(223,38,43)"/><text x="821.00" y="270.50"></text></g><g><title>is_integer_dtype (pandas/core/dtypes/common.py:920) (158 samples, 0.18%)</title><rect x="819" y="276" width="2" height="15" fill="rgb(243,32,50)"/><text x="822.00" y="286.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:866) (261 samples, 0.30%)</title><rect x="825" y="292" width="3" height="15" fill="rgb(228,108,52)"/><text x="828.00" y="302.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (96 samples, 0.11%)</title><rect x="827" y="308" width="1" height="15" fill="rgb(225,52,7)"/><text x="830.00" y="318.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:293) (173 samples, 0.20%)</title><rect x="829" y="308" width="3" height="15" fill="rgb(241,94,31)"/><text x="832.00" y="318.50"></text></g><g><title>__instancecheck__ (abc.py:139) (80 samples, 0.09%)</title><rect x="831" y="324" width="1" height="15" fill="rgb(207,36,46)"/><text x="834.00" y="334.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:874) (289 samples, 0.33%)</title><rect x="829" y="292" width="4" height="15" fill="rgb(226,200,51)"/><text x="832.00" y="302.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1882) (109 samples, 0.13%)</title><rect x="836" y="324" width="2" height="15" fill="rgb(231,67,54)"/><text x="839.00" y="334.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:879) (336 samples, 0.39%)</title><rect x="834" y="292" width="4" height="15" fill="rgb(233,91,24)"/><text x="837.00" y="302.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:157) (321 samples, 0.37%)</title><rect x="834" y="308" width="4" height="15" fill="rgb(248,141,3)"/><text x="837.00" y="318.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:926) (195 samples, 0.23%)</title><rect x="839" y="292" width="3" height="15" fill="rgb(209,227,52)"/><text x="842.00" y="302.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:1067) (1,374 samples, 1.59%)</title><rect x="823" y="276" width="19" height="15" fill="rgb(232,165,16)"/><text x="826.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (134 samples, 0.16%)</title><rect x="844" y="292" width="1" height="15" fill="rgb(216,104,44)"/><text x="847.00" y="302.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:957) (244 samples, 0.28%)</title><rect x="842" y="276" width="3" height="15" fill="rgb(239,148,39)"/><text x="845.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (77 samples, 0.09%)</title><rect x="846" y="292" width="1" height="15" fill="rgb(250,105,34)"/><text x="849.00" y="302.50"></text></g><g><title>maybe_cast_to_datetime (pandas/core/dtypes/cast.py:958) (150 samples, 0.17%)</title><rect x="845" y="276" width="2" height="15" fill="rgb(224,223,24)"/><text x="848.00" y="286.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:697) (1,967 samples, 2.28%)</title><rect x="821" y="260" width="27" height="15" fill="rgb(241,162,21)"/><text x="824.00" y="270.50">_..</text></g><g><title>_try_cast (pandas/core/internals/construction.py:700) (131 samples, 0.15%)</title><rect x="848" y="260" width="1" height="15" fill="rgb(231,201,2)"/><text x="851.00" y="270.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:157) (110 samples, 0.13%)</title><rect x="848" y="276" width="1" height="15" fill="rgb(216,60,24)"/><text x="851.00" y="286.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (164 samples, 0.19%)</title><rect x="852" y="324" width="2" height="15" fill="rgb(233,206,32)"/><text x="855.00" y="334.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (75 samples, 0.09%)</title><rect x="853" y="340" width="1" height="15" fill="rgb(245,45,50)"/><text x="856.00" y="350.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1693) (369 samples, 0.43%)</title><rect x="850" y="276" width="5" height="15" fill="rgb(238,88,37)"/><text x="853.00" y="286.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (354 samples, 0.41%)</title><rect x="850" y="292" width="5" height="15" fill="rgb(221,75,19)"/><text x="853.00" y="302.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (238 samples, 0.28%)</title><rect x="851" y="308" width="4" height="15" fill="rgb(215,73,25)"/><text x="854.00" y="318.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:216) (194 samples, 0.22%)</title><rect x="855" y="292" width="3" height="15" fill="rgb(219,156,10)"/><text x="858.00" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (102 samples, 0.12%)</title><rect x="856" y="308" width="2" height="15" fill="rgb(241,200,4)"/><text x="859.00" y="318.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1695) (256 samples, 0.30%)</title><rect x="855" y="276" width="3" height="15" fill="rgb(237,111,41)"/><text x="858.00" y="286.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (165 samples, 0.19%)</title><rect x="859" y="308" width="2" height="15" fill="rgb(225,153,20)"/><text x="862.00" y="318.50"></text></g><g><title>is_extension_type (pandas/core/dtypes/common.py:1697) (244 samples, 0.28%)</title><rect x="858" y="276" width="4" height="15" fill="rgb(218,213,49)"/><text x="861.00" y="286.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (217 samples, 0.25%)</title><rect x="859" y="292" width="3" height="15" fill="rgb(208,219,12)"/><text x="862.00" y="302.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:704) (895 samples, 1.04%)</title><rect x="849" y="260" width="13" height="15" fill="rgb(253,87,32)"/><text x="852.00" y="270.50"></text></g><g><title>_try_cast (pandas/core/internals/construction.py:706) (115 samples, 0.13%)</title><rect x="862" y="260" width="1" height="15" fill="rgb(243,96,2)"/><text x="865.00" y="270.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:582) (4,246 samples, 4.91%)</title><rect x="805" y="244" width="58" height="15" fill="rgb(238,227,28)"/><text x="808.00" y="254.50">saniti..</text></g><g><title>sanitize_array (pandas/core/internals/construction.py:652) (229 samples, 0.27%)</title><rect x="864" y="244" width="3" height="15" fill="rgb(248,137,53)"/><text x="867.00" y="254.50"></text></g><g><title>__len__ (pandas/core/indexes/range.py:514) (148 samples, 0.17%)</title><rect x="865" y="260" width="2" height="15" fill="rgb(205,228,0)"/><text x="868.00" y="270.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:673) (182 samples, 0.21%)</title><rect x="868" y="244" width="2" height="15" fill="rgb(254,142,2)"/><text x="871.00" y="254.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:157) (134 samples, 0.16%)</title><rect x="869" y="260" width="1" height="15" fill="rgb(219,90,12)"/><text x="872.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (91 samples, 0.11%)</title><rect x="880" y="276" width="1" height="15" fill="rgb(237,69,6)"/><text x="883.00" y="286.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (171 samples, 0.20%)</title><rect x="880" y="260" width="2" height="15" fill="rgb(247,129,42)"/><text x="883.00" y="270.50"></text></g><g><title>sanitize_array (pandas/core/internals/construction.py:674) (885 samples, 1.02%)</title><rect x="870" y="244" width="13" height="15" fill="rgb(215,158,10)"/><text x="873.00" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:262) (6,135 samples, 7.10%)</title><rect x="799" y="228" width="84" height="15" fill="rgb(254,78,41)"/><text x="802.00" y="238.50">__init__ ..</text></g><g><title>__len__ (pandas/core/indexes/range.py:514) (82 samples, 0.09%)</title><rect x="888" y="260" width="1" height="15" fill="rgb(222,166,36)"/><text x="891.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (135 samples, 0.16%)</title><rect x="891" y="308" width="2" height="15" fill="rgb(227,197,6)"/><text x="894.00" y="318.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:216) (209 samples, 0.24%)</title><rect x="890" y="292" width="3" height="15" fill="rgb(234,165,53)"/><text x="893.00" y="302.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3050) (272 samples, 0.31%)</title><rect x="890" y="276" width="4" height="15" fill="rgb(237,145,44)"/><text x="893.00" y="286.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (162 samples, 0.19%)</title><rect x="897" y="324" width="2" height="15" fill="rgb(210,66,0)"/><text x="900.00" y="334.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (78 samples, 0.09%)</title><rect x="898" y="340" width="1" height="15" fill="rgb(211,73,13)"/><text x="901.00" y="350.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3053) (374 samples, 0.43%)</title><rect x="894" y="276" width="5" height="15" fill="rgb(205,164,24)"/><text x="897.00" y="286.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (353 samples, 0.41%)</title><rect x="894" y="292" width="5" height="15" fill="rgb(206,61,20)"/><text x="897.00" y="302.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (225 samples, 0.26%)</title><rect x="896" y="308" width="3" height="15" fill="rgb(207,82,44)"/><text x="899.00" y="318.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (146 samples, 0.17%)</title><rect x="900" y="308" width="2" height="15" fill="rgb(229,203,14)"/><text x="903.00" y="318.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3058) (212 samples, 0.25%)</title><rect x="900" y="276" width="2" height="15" fill="rgb(212,49,48)"/><text x="903.00" y="286.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (186 samples, 0.22%)</title><rect x="900" y="292" width="2" height="15" fill="rgb(214,122,9)"/><text x="903.00" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (139 samples, 0.16%)</title><rect x="906" y="324" width="2" height="15" fill="rgb(205,121,48)"/><text x="909.00" y="334.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (369 samples, 0.43%)</title><rect x="903" y="292" width="5" height="15" fill="rgb(241,106,36)"/><text x="906.00" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:991) (290 samples, 0.34%)</title><rect x="904" y="308" width="4" height="15" fill="rgb(206,9,7)"/><text x="907.00" y="318.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (140 samples, 0.16%)</title><rect x="910" y="324" width="2" height="15" fill="rgb(247,68,33)"/><text x="913.00" y="334.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (694 samples, 0.80%)</title><rect x="902" y="276" width="10" height="15" fill="rgb(216,157,35)"/><text x="905.00" y="286.50"></text></g><g><title>is_period_dtype (pandas/core/dtypes/common.py:533) (271 samples, 0.31%)</title><rect x="908" y="292" width="4" height="15" fill="rgb(218,9,38)"/><text x="911.00" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:847) (221 samples, 0.26%)</title><rect x="909" y="308" width="3" height="15" fill="rgb(254,217,24)"/><text x="912.00" y="318.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3062) (161 samples, 0.19%)</title><rect x="912" y="276" width="2" height="15" fill="rgb(239,93,46)"/><text x="915.00" y="286.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1749) (100 samples, 0.12%)</title><rect x="913" y="292" width="1" height="15" fill="rgb(251,13,46)"/><text x="916.00" y="302.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (1,935 samples, 2.24%)</title><rect x="890" y="260" width="26" height="15" fill="rgb(240,127,7)"/><text x="893.00" y="270.50">m..</text></g><g><title>__init__ (pandas/core/internals/blocks.py:80) (86 samples, 0.10%)</title><rect x="919" y="292" width="2" height="15" fill="rgb(229,229,1)"/><text x="922.00" y="302.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (240 samples, 0.28%)</title><rect x="918" y="276" width="4" height="15" fill="rgb(247,125,13)"/><text x="921.00" y="286.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:1481) (2,727 samples, 3.16%)</title><rect x="886" y="244" width="38" height="15" fill="rgb(218,58,31)"/><text x="889.00" y="254.50">__i..</text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (557 samples, 0.64%)</title><rect x="916" y="260" width="8" height="15" fill="rgb(218,153,52)"/><text x="919.00" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:264) (3,014 samples, 3.49%)</title><rect x="883" y="228" width="41" height="15" fill="rgb(223,104,45)"/><text x="886.00" y="238.50">__i..</text></g><g><title>__init__ (pandas/core/generic.py:140) (82 samples, 0.09%)</title><rect x="925" y="244" width="1" height="15" fill="rgb(248,205,51)"/><text x="928.00" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:266) (221 samples, 0.26%)</title><rect x="924" y="228" width="3" height="15" fill="rgb(234,147,45)"/><text x="927.00" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5079) (359 samples, 0.42%)</title><rect x="928" y="244" width="4" height="15" fill="rgb(213,4,51)"/><text x="931.00" y="254.50"></text></g><g><title>name (pandas/core/series.py:397) (269 samples, 0.31%)</title><rect x="929" y="260" width="3" height="15" fill="rgb(223,19,8)"/><text x="932.00" y="270.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:5063) (96 samples, 0.11%)</title><rect x="931" y="276" width="1" height="15" fill="rgb(248,140,51)"/><text x="934.00" y="286.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5089) (108 samples, 0.13%)</title><rect x="934" y="244" width="1" height="15" fill="rgb(229,101,10)"/><text x="937.00" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:268) (618 samples, 0.72%)</title><rect x="927" y="228" width="8" height="15" fill="rgb(237,1,16)"/><text x="930.00" y="238.50"></text></g><g><title>_set_axis (pandas/core/series.py:376) (83 samples, 0.10%)</title><rect x="937" y="244" width="1" height="15" fill="rgb(244,198,21)"/><text x="940.00" y="254.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:286) (26,534 samples, 30.71%)</title><rect x="576" y="164" width="362" height="15" fill="rgb(220,31,24)"/><text x="579.00" y="174.50">apply_series_generator (pandas/core/apply.py:286)</text></g><g><title>f (pandas/core/frame.py:7693) (26,449 samples, 30.61%)</title><rect x="577" y="180" width="361" height="15" fill="rgb(248,3,43)"/><text x="580.00" y="190.50">f (pandas/core/frame.py:7693)</text></g><g><title>mode (pandas/core/series.py:1610) (26,388 samples, 30.54%)</title><rect x="578" y="196" width="360" height="15" fill="rgb(208,81,37)"/><text x="581.00" y="206.50">mode (pandas/core/series.py:1610)</text></g><g><title>mode (pandas/core/algorithms.py:832) (12,118 samples, 14.03%)</title><rect x="773" y="212" width="165" height="15" fill="rgb(253,39,52)"/><text x="776.00" y="222.50">mode (pandas/core/alg..</text></g><g><title>__init__ (pandas/core/series.py:269) (217 samples, 0.25%)</title><rect x="935" y="228" width="3" height="15" fill="rgb(244,156,4)"/><text x="938.00" y="238.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:287) (93 samples, 0.11%)</title><rect x="938" y="164" width="2" height="15" fill="rgb(242,10,8)"/><text x="941.00" y="174.50"></text></g><g><title>apply_standard (pandas/core/apply.py:257) (31,076 samples, 35.97%)</title><rect x="516" y="148" width="424" height="15" fill="rgb(241,97,19)"/><text x="519.00" y="158.50">apply_standard (pandas/core/apply.py:257)</text></g><g><title>is_datetime64_dtype (pandas/core/dtypes/common.py:431) (85 samples, 0.10%)</title><rect x="942" y="228" width="1" height="15" fill="rgb(228,120,45)"/><text x="945.00" y="238.50"></text></g><g><title>is_datetimelike (pandas/core/dtypes/common.py:741) (147 samples, 0.17%)</title><rect x="942" y="212" width="2" height="15" fill="rgb(234,119,41)"/><text x="945.00" y="222.50"></text></g><g><title>__iter__ (pandas/core/base.py:1126) (273 samples, 0.32%)</title><rect x="941" y="196" width="4" height="15" fill="rgb(211,224,40)"/><text x="944.00" y="206.50"></text></g><g><title>is_sequence (pandas/core/dtypes/inference.py:495) (417 samples, 0.48%)</title><rect x="941" y="180" width="5" height="15" fill="rgb(235,50,48)"/><text x="944.00" y="190.50"></text></g><g><title>__iter__ (pandas/core/base.py:1131) (77 samples, 0.09%)</title><rect x="945" y="196" width="1" height="15" fill="rgb(228,4,35)"/><text x="948.00" y="206.50"></text></g><g><title>is_sequence (pandas/core/dtypes/inference.py:496) (77 samples, 0.09%)</title><rect x="946" y="180" width="1" height="15" fill="rgb(252,16,50)"/><text x="949.00" y="190.50"></text></g><g><title>wrap_results (pandas/core/apply.py:306) (530 samples, 0.61%)</title><rect x="940" y="164" width="8" height="15" fill="rgb(215,124,2)"/><text x="943.00" y="174.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:266) (117 samples, 0.14%)</title><rect x="951" y="228" width="2" height="15" fill="rgb(248,187,13)"/><text x="954.00" y="238.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:279) (118 samples, 0.14%)</title><rect x="953" y="228" width="2" height="15" fill="rgb(230,75,13)"/><text x="956.00" y="238.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (101 samples, 0.12%)</title><rect x="954" y="244" width="1" height="15" fill="rgb(236,45,29)"/><text x="957.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:112) (95 samples, 0.11%)</title><rect x="956" y="276" width="2" height="15" fill="rgb(229,211,15)"/><text x="959.00" y="286.50"></text></g><g><title>construct_from_string (pandas/core/dtypes/dtypes.py:937) (77 samples, 0.09%)</title><rect x="957" y="292" width="1" height="15" fill="rgb(242,41,7)"/><text x="960.00" y="302.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:285) (203 samples, 0.23%)</title><rect x="955" y="228" width="3" height="15" fill="rgb(211,209,51)"/><text x="958.00" y="238.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (195 samples, 0.23%)</title><rect x="955" y="244" width="3" height="15" fill="rgb(253,185,11)"/><text x="958.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:991) (181 samples, 0.21%)</title><rect x="955" y="260" width="3" height="15" fill="rgb(252,56,3)"/><text x="958.00" y="270.50"></text></g><g><title>is_datetime64_any_dtype (pandas/core/dtypes/common.py:1114) (103 samples, 0.12%)</title><rect x="958" y="244" width="1" height="15" fill="rgb(218,8,10)"/><text x="961.00" y="254.50"></text></g><g><title>is_datetime64_dtype (pandas/core/dtypes/common.py:431) (99 samples, 0.11%)</title><rect x="958" y="260" width="1" height="15" fill="rgb(226,90,35)"/><text x="961.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:292) (211 samples, 0.24%)</title><rect x="958" y="228" width="3" height="15" fill="rgb(229,205,30)"/><text x="961.00" y="238.50"></text></g><g><title>is_datetime64_any_dtype (pandas/core/dtypes/common.py:1115) (96 samples, 0.11%)</title><rect x="959" y="244" width="2" height="15" fill="rgb(219,20,27)"/><text x="962.00" y="254.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (94 samples, 0.11%)</title><rect x="959" y="260" width="2" height="15" fill="rgb(208,83,32)"/><text x="962.00" y="270.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:112) (100 samples, 0.12%)</title><rect x="963" y="276" width="1" height="15" fill="rgb(213,207,42)"/><text x="966.00" y="286.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:324) (175 samples, 0.20%)</title><rect x="962" y="228" width="2" height="15" fill="rgb(208,151,30)"/><text x="965.00" y="238.50"></text></g><g><title>is_period_dtype (pandas/core/dtypes/common.py:533) (170 samples, 0.20%)</title><rect x="962" y="244" width="2" height="15" fill="rgb(237,180,3)"/><text x="965.00" y="254.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:847) (157 samples, 0.18%)</title><rect x="962" y="260" width="2" height="15" fill="rgb(248,212,54)"/><text x="965.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:467) (87 samples, 0.10%)</title><rect x="965" y="228" width="1" height="15" fill="rgb(222,213,22)"/><text x="968.00" y="238.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1213) (109 samples, 0.13%)</title><rect x="969" y="260" width="2" height="15" fill="rgb(218,206,5)"/><text x="972.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:482) (271 samples, 0.31%)</title><rect x="968" y="228" width="4" height="15" fill="rgb(248,35,35)"/><text x="971.00" y="238.50"></text></g><g><title>asarray_tuplesafe (pandas/core/common.py:230) (201 samples, 0.23%)</title><rect x="969" y="244" width="3" height="15" fill="rgb(237,184,37)"/><text x="972.00" y="254.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1214) (79 samples, 0.09%)</title><rect x="971" y="260" width="1" height="15" fill="rgb(253,83,53)"/><text x="974.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:266) (100 samples, 0.12%)</title><rect x="972" y="244" width="2" height="15" fill="rgb(237,131,41)"/><text x="975.00" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:285) (82 samples, 0.09%)</title><rect x="975" y="244" width="1" height="15" fill="rgb(248,123,5)"/><text x="978.00" y="254.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (78 samples, 0.09%)</title><rect x="975" y="260" width="1" height="15" fill="rgb(241,109,4)"/><text x="978.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:292) (115 samples, 0.13%)</title><rect x="976" y="244" width="2" height="15" fill="rgb(221,148,23)"/><text x="979.00" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:399) (74 samples, 0.09%)</title><rect x="980" y="244" width="1" height="15" fill="rgb(206,71,17)"/><text x="983.00" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:411) (113 samples, 0.13%)</title><rect x="982" y="244" width="2" height="15" fill="rgb(241,86,40)"/><text x="985.00" y="254.50"></text></g><g><title>asarray_tuplesafe (pandas/core/common.py:232) (127 samples, 0.15%)</title><rect x="985" y="260" width="1" height="15" fill="rgb(238,48,50)"/><text x="988.00" y="270.50"></text></g><g><title>asarray (numpy/core/numeric.py:538) (116 samples, 0.13%)</title><rect x="985" y="276" width="1" height="15" fill="rgb(253,59,50)"/><text x="988.00" y="286.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:414) (197 samples, 0.23%)</title><rect x="984" y="244" width="3" height="15" fill="rgb(241,62,48)"/><text x="987.00" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:422) (285 samples, 0.33%)</title><rect x="987" y="244" width="3" height="15" fill="rgb(253,223,34)"/><text x="990.00" y="254.50"></text></g><g><title>_try_convert_to_int_index (pandas/core/indexes/base.py:3773) (95 samples, 0.11%)</title><rect x="991" y="260" width="1" height="15" fill="rgb(249,63,15)"/><text x="994.00" y="270.50"></text></g><g><title>_try_convert_to_int_index (pandas/core/indexes/base.py:3778) (121 samples, 0.14%)</title><rect x="993" y="260" width="1" height="15" fill="rgb(223,153,15)"/><text x="996.00" y="270.50"></text></g><g><title>_try_convert_to_int_index (pandas/core/indexes/base.py:3779) (345 samples, 0.40%)</title><rect x="994" y="260" width="5" height="15" fill="rgb(207,82,40)"/><text x="997.00" y="270.50"></text></g><g><title>_all (numpy/core/_methods.py:46) (155 samples, 0.18%)</title><rect x="997" y="276" width="2" height="15" fill="rgb(220,170,26)"/><text x="1000.00" y="286.50"></text></g><g><title>init_dict (pandas/core/internals/construction.py:209) (3,888 samples, 4.50%)</title><rect x="951" y="212" width="53" height="15" fill="rgb(218,205,19)"/><text x="954.00" y="222.50">init_..</text></g><g><title>__new__ (pandas/core/indexes/base.py:483) (2,358 samples, 2.73%)</title><rect x="972" y="228" width="32" height="15" fill="rgb(253,190,45)"/><text x="975.00" y="238.50">__..</text></g><g><title>__new__ (pandas/core/indexes/base.py:426) (968 samples, 1.12%)</title><rect x="991" y="244" width="13" height="15" fill="rgb(206,212,22)"/><text x="994.00" y="254.50"></text></g><g><title>_try_convert_to_int_index (pandas/core/indexes/base.py:3780) (343 samples, 0.40%)</title><rect x="999" y="260" width="5" height="15" fill="rgb(208,198,19)"/><text x="1002.00" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/numeric.py:58) (170 samples, 0.20%)</title><rect x="1002" y="276" width="2" height="15" fill="rgb(225,23,37)"/><text x="1005.00" y="286.50"></text></g><g><title>_union_indexes (pandas/core/indexes/api.py:152) (96 samples, 0.11%)</title><rect x="1007" y="260" width="2" height="15" fill="rgb(209,132,44)"/><text x="1010.00" y="270.50"></text></g><g><title>is_list_like (pandas/core/dtypes/inference.py:293) (79 samples, 0.09%)</title><rect x="1010" y="308" width="2" height="15" fill="rgb(235,72,30)"/><text x="1013.00" y="318.50"></text></g><g><title>_assert_can_do_setop (pandas/core/indexes/base.py:2591) (163 samples, 0.19%)</title><rect x="1010" y="292" width="2" height="15" fill="rgb(218,6,32)"/><text x="1013.00" y="302.50"></text></g><g><title>union (pandas/core/indexes/range.py:453) (186 samples, 0.22%)</title><rect x="1010" y="276" width="2" height="15" fill="rgb(213,8,32)"/><text x="1013.00" y="286.50"></text></g><g><title>union (pandas/core/indexes/range.py:454) (284 samples, 0.33%)</title><rect x="1012" y="276" width="4" height="15" fill="rgb(216,172,14)"/><text x="1015.00" y="286.50"></text></g><g><title>_assert_can_do_setop (pandas/core/indexes/base.py:2591) (124 samples, 0.14%)</title><rect x="1018" y="308" width="2" height="15" fill="rgb(216,177,11)"/><text x="1021.00" y="318.50"></text></g><g><title>union (pandas/core/indexes/base.py:2293) (135 samples, 0.16%)</title><rect x="1018" y="292" width="2" height="15" fill="rgb(254,125,4)"/><text x="1021.00" y="302.50"></text></g><g><title>union (pandas/core/indexes/base.py:2296) (229 samples, 0.27%)</title><rect x="1020" y="292" width="3" height="15" fill="rgb(252,122,21)"/><text x="1023.00" y="302.50"></text></g><g><title>get_op_result_name (pandas/core/ops.py:59) (92 samples, 0.11%)</title><rect x="1024" y="324" width="1" height="15" fill="rgb(228,85,6)"/><text x="1027.00" y="334.50"></text></g><g><title>_get_reconciled_name_object (pandas/core/indexes/base.py:2244) (188 samples, 0.22%)</title><rect x="1024" y="308" width="2" height="15" fill="rgb(221,203,24)"/><text x="1027.00" y="318.50"></text></g><g><title>extract_index (pandas/core/internals/construction.py:312) (1,417 samples, 1.64%)</title><rect x="1007" y="244" width="19" height="15" fill="rgb(241,170,12)"/><text x="1010.00" y="254.50"></text></g><g><title>_union_indexes (pandas/core/indexes/api.py:183) (1,247 samples, 1.44%)</title><rect x="1009" y="260" width="17" height="15" fill="rgb(233,125,19)"/><text x="1012.00" y="270.50"></text></g><g><title>union (pandas/core/indexes/range.py:455) (742 samples, 0.86%)</title><rect x="1016" y="276" width="10" height="15" fill="rgb(207,37,41)"/><text x="1019.00" y="286.50"></text></g><g><title>union (pandas/core/indexes/base.py:2297) (211 samples, 0.24%)</title><rect x="1023" y="292" width="3" height="15" fill="rgb(215,216,36)"/><text x="1026.00" y="302.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:51) (1,598 samples, 1.85%)</title><rect x="1005" y="228" width="22" height="15" fill="rgb(250,102,39)"/><text x="1008.00" y="238.50">a..</text></g><g><title>_homogenize (pandas/core/internals/construction.py:259) (83 samples, 0.10%)</title><rect x="1027" y="244" width="1" height="15" fill="rgb(233,20,54)"/><text x="1030.00" y="254.50"></text></g><g><title>_construct_axes_from_arguments (pandas/core/generic.py:334) (94 samples, 0.11%)</title><rect x="1033" y="292" width="2" height="15" fill="rgb(235,4,0)"/><text x="1036.00" y="302.50"></text></g><g><title>reindex (pandas/core/generic.py:4320) (245 samples, 0.28%)</title><rect x="1031" y="276" width="4" height="15" fill="rgb(245,178,1)"/><text x="1034.00" y="286.50"></text></g><g><title>reindex (pandas/core/generic.py:4321) (86 samples, 0.10%)</title><rect x="1035" y="276" width="1" height="15" fill="rgb(215,113,38)"/><text x="1038.00" y="286.50"></text></g><g><title>_protect_consolidate (pandas/core/generic.py:5127) (156 samples, 0.18%)</title><rect x="1038" y="308" width="3" height="15" fill="rgb(225,95,49)"/><text x="1041.00" y="318.50"></text></g><g><title>f (pandas/core/generic.py:5136) (149 samples, 0.17%)</title><rect x="1039" y="324" width="2" height="15" fill="rgb(215,119,3)"/><text x="1042.00" y="334.50"></text></g><g><title>reindex (pandas/core/generic.py:4337) (308 samples, 0.36%)</title><rect x="1037" y="276" width="4" height="15" fill="rgb(230,135,17)"/><text x="1040.00" y="286.50"></text></g><g><title>_consolidate_inplace (pandas/core/generic.py:5138) (243 samples, 0.28%)</title><rect x="1038" y="292" width="3" height="15" fill="rgb(234,213,5)"/><text x="1041.00" y="302.50"></text></g><g><title>_get_axis (pandas/core/generic.py:378) (79 samples, 0.09%)</title><rect x="1044" y="308" width="1" height="15" fill="rgb(224,220,46)"/><text x="1047.00" y="318.50"></text></g><g><title>equals (pandas/core/indexes/range.py:335) (85 samples, 0.10%)</title><rect x="1045" y="324" width="2" height="15" fill="rgb(214,62,9)"/><text x="1048.00" y="334.50"></text></g><g><title>identical (pandas/core/indexes/base.py:4076) (206 samples, 0.24%)</title><rect x="1045" y="308" width="3" height="15" fill="rgb(225,148,35)"/><text x="1048.00" y="318.50"></text></g><g><title>identical (pandas/core/indexes/base.py:4078) (110 samples, 0.13%)</title><rect x="1048" y="308" width="2" height="15" fill="rgb(217,78,27)"/><text x="1051.00" y="318.50"></text></g><g><title>reindex (pandas/core/generic.py:4342) (644 samples, 0.75%)</title><rect x="1041" y="276" width="9" height="15" fill="rgb(208,219,13)"/><text x="1044.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/generic.py:4342) (558 samples, 0.65%)</title><rect x="1042" y="292" width="8" height="15" fill="rgb(232,70,22)"/><text x="1045.00" y="302.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:265) (1,584 samples, 1.83%)</title><rect x="1028" y="244" width="22" height="15" fill="rgb(228,87,37)"/><text x="1031.00" y="254.50">_..</text></g><g><title>reindex (pandas/core/series.py:3738) (1,521 samples, 1.76%)</title><rect x="1029" y="260" width="21" height="15" fill="rgb(223,142,20)"/><text x="1032.00" y="270.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:56) (1,746 samples, 2.02%)</title><rect x="1027" y="228" width="23" height="15" fill="rgb(213,161,13)"/><text x="1030.00" y="238.50">a..</text></g><g><title>form_blocks (pandas/core/internals/managers.py:1704) (106 samples, 0.12%)</title><rect x="1052" y="260" width="2" height="15" fill="rgb(218,35,17)"/><text x="1055.00" y="270.50"></text></g><g><title>form_blocks (pandas/core/internals/managers.py:1709) (159 samples, 0.18%)</title><rect x="1054" y="260" width="2" height="15" fill="rgb(226,125,0)"/><text x="1057.00" y="270.50"></text></g><g><title>form_blocks (pandas/core/internals/managers.py:1714) (232 samples, 0.27%)</title><rect x="1057" y="260" width="3" height="15" fill="rgb(253,180,13)"/><text x="1060.00" y="270.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3047) (138 samples, 0.16%)</title><rect x="1061" y="276" width="2" height="15" fill="rgb(230,39,7)"/><text x="1064.00" y="286.50"></text></g><g><title>dtype (pandas/core/series.py:411) (97 samples, 0.11%)</title><rect x="1061" y="292" width="2" height="15" fill="rgb(234,116,47)"/><text x="1064.00" y="302.50"></text></g><g><title>dtype (pandas/core/internals/managers.py:1524) (75 samples, 0.09%)</title><rect x="1062" y="308" width="1" height="15" fill="rgb(208,188,18)"/><text x="1065.00" y="318.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (146 samples, 0.17%)</title><rect x="1064" y="308" width="2" height="15" fill="rgb(229,20,15)"/><text x="1067.00" y="318.50"></text></g><g><title>is_sparse (pandas/core/dtypes/common.py:216) (249 samples, 0.29%)</title><rect x="1063" y="292" width="3" height="15" fill="rgb(224,127,15)"/><text x="1066.00" y="302.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3050) (308 samples, 0.36%)</title><rect x="1063" y="276" width="4" height="15" fill="rgb(220,206,1)"/><text x="1066.00" y="286.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (172 samples, 0.20%)</title><rect x="1069" y="324" width="3" height="15" fill="rgb(241,184,14)"/><text x="1072.00" y="334.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3053) (478 samples, 0.55%)</title><rect x="1067" y="276" width="6" height="15" fill="rgb(234,75,9)"/><text x="1070.00" y="286.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (458 samples, 0.53%)</title><rect x="1067" y="292" width="6" height="15" fill="rgb(247,8,38)"/><text x="1070.00" y="302.50"></text></g><g><title>is_categorical_dtype (pandas/core/dtypes/common.py:602) (340 samples, 0.39%)</title><rect x="1069" y="308" width="4" height="15" fill="rgb(214,118,19)"/><text x="1072.00" y="318.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:98) (123 samples, 0.14%)</title><rect x="1072" y="324" width="1" height="15" fill="rgb(238,10,4)"/><text x="1075.00" y="334.50"></text></g><g><title>dtype (pandas/core/series.py:411) (88 samples, 0.10%)</title><rect x="1072" y="340" width="1" height="15" fill="rgb(228,88,26)"/><text x="1075.00" y="350.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (139 samples, 0.16%)</title><rect x="1074" y="308" width="2" height="15" fill="rgb(231,131,36)"/><text x="1077.00" y="318.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3058) (293 samples, 0.34%)</title><rect x="1074" y="276" width="4" height="15" fill="rgb(224,128,30)"/><text x="1077.00" y="286.50"></text></g><g><title>is_datetime64tz_dtype (pandas/core/dtypes/common.py:469) (273 samples, 0.32%)</title><rect x="1074" y="292" width="4" height="15" fill="rgb(226,182,46)"/><text x="1077.00" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:98) (100 samples, 0.12%)</title><rect x="1076" y="308" width="2" height="15" fill="rgb(227,199,3)"/><text x="1079.00" y="318.50"></text></g><g><title>dtype (pandas/core/series.py:411) (79 samples, 0.09%)</title><rect x="1077" y="324" width="1" height="15" fill="rgb(236,52,42)"/><text x="1080.00" y="334.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (149 samples, 0.17%)</title><rect x="1081" y="324" width="2" height="15" fill="rgb(232,61,29)"/><text x="1084.00" y="334.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (337 samples, 0.39%)</title><rect x="1078" y="292" width="5" height="15" fill="rgb(240,31,40)"/><text x="1081.00" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:991) (271 samples, 0.31%)</title><rect x="1079" y="308" width="4" height="15" fill="rgb(250,124,16)"/><text x="1082.00" y="318.50"></text></g><g><title>is_dtype (pandas/core/dtypes/base.py:101) (148 samples, 0.17%)</title><rect x="1085" y="324" width="2" height="15" fill="rgb(249,111,50)"/><text x="1088.00" y="334.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:9) (74 samples, 0.09%)</title><rect x="1086" y="340" width="1" height="15" fill="rgb(216,202,33)"/><text x="1089.00" y="350.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (663 samples, 0.77%)</title><rect x="1078" y="276" width="9" height="15" fill="rgb(222,33,20)"/><text x="1081.00" y="286.50"></text></g><g><title>is_period_dtype (pandas/core/dtypes/common.py:533) (276 samples, 0.32%)</title><rect x="1083" y="292" width="4" height="15" fill="rgb(243,75,45)"/><text x="1086.00" y="302.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:847) (233 samples, 0.27%)</title><rect x="1084" y="308" width="3" height="15" fill="rgb(219,123,32)"/><text x="1087.00" y="318.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1747) (119 samples, 0.14%)</title><rect x="1087" y="292" width="2" height="15" fill="rgb(222,67,36)"/><text x="1090.00" y="302.50"></text></g><g><title>dtype (pandas/core/series.py:411) (88 samples, 0.10%)</title><rect x="1087" y="308" width="2" height="15" fill="rgb(251,82,14)"/><text x="1090.00" y="318.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3062) (285 samples, 0.33%)</title><rect x="1087" y="276" width="4" height="15" fill="rgb(252,43,40)"/><text x="1090.00" y="286.50"></text></g><g><title>is_extension_array_dtype (pandas/core/dtypes/common.py:1749) (122 samples, 0.14%)</title><rect x="1089" y="292" width="2" height="15" fill="rgb(220,103,36)"/><text x="1092.00" y="302.50"></text></g><g><title>form_blocks (pandas/core/internals/managers.py:1717) (2,358 samples, 2.73%)</title><rect x="1060" y="260" width="32" height="15" fill="rgb(236,130,50)"/><text x="1063.00" y="270.50">fo..</text></g><g><title>form_blocks (pandas/core/internals/managers.py:1718) (99 samples, 0.11%)</title><rect x="1092" y="260" width="2" height="15" fill="rgb(238,131,31)"/><text x="1095.00" y="270.50"></text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:1856) (196 samples, 0.23%)</title><rect x="1097" y="292" width="2" height="15" fill="rgb(205,61,44)"/><text x="1100.00" y="302.50"></text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:1859) (119 samples, 0.14%)</title><rect x="1099" y="292" width="2" height="15" fill="rgb(229,54,17)"/><text x="1102.00" y="302.50"></text></g><g><title>_shape_compat (pandas/core/internals/managers.py:1852) (80 samples, 0.09%)</title><rect x="1100" y="308" width="1" height="15" fill="rgb(240,176,23)"/><text x="1103.00" y="318.50"></text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:1863) (168 samples, 0.19%)</title><rect x="1102" y="292" width="2" height="15" fill="rgb(212,191,15)"/><text x="1105.00" y="302.50"></text></g><g><title>_multi_blockify (pandas/core/internals/managers.py:1819) (614 samples, 0.71%)</title><rect x="1096" y="276" width="8" height="15" fill="rgb(231,129,47)"/><text x="1099.00" y="286.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3050) (78 samples, 0.09%)</title><rect x="1105" y="308" width="1" height="15" fill="rgb(236,211,26)"/><text x="1108.00" y="318.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (140 samples, 0.16%)</title><rect x="1107" y="308" width="2" height="15" fill="rgb(249,218,53)"/><text x="1110.00" y="318.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (392 samples, 0.45%)</title><rect x="1105" y="292" width="5" height="15" fill="rgb(252,209,48)"/><text x="1108.00" y="302.50"></text></g><g><title>require (numpy/core/numeric.py:766) (126 samples, 0.15%)</title><rect x="1114" y="340" width="1" height="15" fill="rgb(251,21,50)"/><text x="1117.00" y="350.50"></text></g><g><title>mgr_locs (pandas/core/internals/blocks.py:202) (373 samples, 0.43%)</title><rect x="1111" y="324" width="5" height="15" fill="rgb(221,21,17)"/><text x="1114.00" y="334.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:80) (398 samples, 0.46%)</title><rect x="1111" y="308" width="5" height="15" fill="rgb(251,168,6)"/><text x="1114.00" y="318.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:84) (111 samples, 0.13%)</title><rect x="1116" y="308" width="2" height="15" fill="rgb(219,191,10)"/><text x="1119.00" y="318.50"></text></g><g><title>_multi_blockify (pandas/core/internals/managers.py:1821) (970 samples, 1.12%)</title><rect x="1104" y="276" width="14" height="15" fill="rgb(212,211,6)"/><text x="1107.00" y="286.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (565 samples, 0.65%)</title><rect x="1110" y="292" width="8" height="15" fill="rgb(240,197,20)"/><text x="1113.00" y="302.50"></text></g><g><title>form_blocks (pandas/core/internals/managers.py:1734) (1,720 samples, 1.99%)</title><rect x="1094" y="260" width="24" height="15" fill="rgb(252,141,47)"/><text x="1097.00" y="270.50">f..</text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:1859) (115 samples, 0.13%)</title><rect x="1119" y="292" width="2" height="15" fill="rgb(214,211,18)"/><text x="1122.00" y="302.50"></text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:1863) (200 samples, 0.23%)</title><rect x="1122" y="292" width="3" height="15" fill="rgb(240,10,5)"/><text x="1125.00" y="302.50"></text></g><g><title>_simple_blockify (pandas/core/internals/managers.py:1800) (436 samples, 0.50%)</title><rect x="1119" y="276" width="6" height="15" fill="rgb(208,1,27)"/><text x="1122.00" y="286.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3050) (91 samples, 0.11%)</title><rect x="1125" y="308" width="1" height="15" fill="rgb(235,10,37)"/><text x="1128.00" y="318.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3053) (77 samples, 0.09%)</title><rect x="1126" y="308" width="2" height="15" fill="rgb(238,93,34)"/><text x="1129.00" y="318.50"></text></g><g><title>is_categorical (pandas/core/dtypes/common.py:291) (77 samples, 0.09%)</title><rect x="1126" y="324" width="2" height="15" fill="rgb(220,40,39)"/><text x="1129.00" y="334.50"></text></g><g><title>get_block_type (pandas/core/internals/blocks.py:3060) (116 samples, 0.13%)</title><rect x="1128" y="308" width="2" height="15" fill="rgb(235,225,33)"/><text x="1131.00" y="318.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3088) (391 samples, 0.45%)</title><rect x="1125" y="292" width="5" height="15" fill="rgb(242,126,31)"/><text x="1128.00" y="302.50"></text></g><g><title>require (numpy/core/numeric.py:766) (91 samples, 0.11%)</title><rect x="1134" y="356" width="1" height="15" fill="rgb(229,91,4)"/><text x="1137.00" y="366.50"></text></g><g><title>mgr_locs (pandas/core/internals/blocks.py:202) (235 samples, 0.27%)</title><rect x="1132" y="340" width="3" height="15" fill="rgb(220,185,36)"/><text x="1135.00" y="350.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:80) (259 samples, 0.30%)</title><rect x="1131" y="324" width="4" height="15" fill="rgb(246,209,33)"/><text x="1134.00" y="334.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:84) (79 samples, 0.09%)</title><rect x="1135" y="324" width="1" height="15" fill="rgb(235,118,2)"/><text x="1138.00" y="334.50"></text></g><g><title>form_blocks (pandas/core/internals/managers.py:1754) (1,293 samples, 1.50%)</title><rect x="1119" y="260" width="17" height="15" fill="rgb(218,102,42)"/><text x="1122.00" y="270.50"></text></g><g><title>_simple_blockify (pandas/core/internals/managers.py:1806) (833 samples, 0.96%)</title><rect x="1125" y="276" width="11" height="15" fill="rgb(220,65,49)"/><text x="1128.00" y="286.50"></text></g><g><title>make_block (pandas/core/internals/blocks.py:3095) (420 samples, 0.49%)</title><rect x="1130" y="292" width="6" height="15" fill="rgb(250,2,7)"/><text x="1133.00" y="302.50"></text></g><g><title>__init__ (pandas/core/internals/blocks.py:2631) (372 samples, 0.43%)</title><rect x="1131" y="308" width="5" height="15" fill="rgb(207,144,36)"/><text x="1134.00" y="318.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals/managers.py:1666) (6,321 samples, 7.32%)</title><rect x="1051" y="244" width="86" height="15" fill="rgb(207,218,37)"/><text x="1054.00" y="254.50">create_blo..</text></g><g><title>_verify_integrity (pandas/core/internals/managers.py:307) (110 samples, 0.13%)</title><rect x="1139" y="276" width="1" height="15" fill="rgb(237,187,12)"/><text x="1142.00" y="286.50"></text></g><g><title>shape (pandas/core/internals/managers.py:141) (105 samples, 0.12%)</title><rect x="1139" y="292" width="1" height="15" fill="rgb(239,145,39)"/><text x="1142.00" y="302.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:114) (258 samples, 0.30%)</title><rect x="1138" y="260" width="4" height="15" fill="rgb(236,51,2)"/><text x="1141.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (87 samples, 0.10%)</title><rect x="1150" y="356" width="1" height="15" fill="rgb(250,108,46)"/><text x="1153.00" y="366.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (173 samples, 0.20%)</title><rect x="1149" y="340" width="3" height="15" fill="rgb(207,229,25)"/><text x="1152.00" y="350.50"></text></g><g><title>_consolidate_check (pandas/core/internals/managers.py:600) (735 samples, 0.85%)</title><rect x="1142" y="276" width="10" height="15" fill="rgb(253,157,4)"/><text x="1145.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:600) (718 samples, 0.83%)</title><rect x="1142" y="292" width="10" height="15" fill="rgb(243,147,47)"/><text x="1145.00" y="302.50"></text></g><g><title>ftype (pandas/core/internals/blocks.py:318) (661 samples, 0.77%)</title><rect x="1143" y="308" width="9" height="15" fill="rgb(239,158,29)"/><text x="1146.00" y="318.50"></text></g><g><title>__str__ (numpy/core/_dtype.py:54) (331 samples, 0.38%)</title><rect x="1148" y="324" width="4" height="15" fill="rgb(236,42,49)"/><text x="1151.00" y="334.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:116) (786 samples, 0.91%)</title><rect x="1142" y="260" width="11" height="15" fill="rgb(233,97,10)"/><text x="1145.00" y="270.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:190) (172 samples, 0.20%)</title><rect x="1153" y="276" width="2" height="15" fill="rgb(211,104,20)"/><text x="1156.00" y="286.50"></text></g><g><title>shape (pandas/core/internals/managers.py:141) (90 samples, 0.10%)</title><rect x="1154" y="292" width="1" height="15" fill="rgb(253,27,32)"/><text x="1157.00" y="302.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:191) (104 samples, 0.12%)</title><rect x="1155" y="276" width="2" height="15" fill="rgb(252,117,39)"/><text x="1158.00" y="286.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:197) (80 samples, 0.09%)</title><rect x="1158" y="276" width="1" height="15" fill="rgb(231,0,50)"/><text x="1161.00" y="286.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:198) (144 samples, 0.17%)</title><rect x="1159" y="276" width="2" height="15" fill="rgb(222,171,28)"/><text x="1162.00" y="286.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py:200) (267 samples, 0.31%)</title><rect x="1161" y="276" width="4" height="15" fill="rgb(240,86,17)"/><text x="1164.00" y="286.50"></text></g><g><title>_any (numpy/core/_methods.py:43) (140 samples, 0.16%)</title><rect x="1163" y="292" width="2" height="15" fill="rgb(236,53,12)"/><text x="1166.00" y="302.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:118) (876 samples, 1.01%)</title><rect x="1153" y="260" width="12" height="15" fill="rgb(248,6,17)"/><text x="1156.00" y="270.50"></text></g><g><title>create_block_manager_from_arrays (pandas/core/internals/managers.py:1667) (2,081 samples, 2.41%)</title><rect x="1137" y="244" width="29" height="15" fill="rgb(242,67,15)"/><text x="1140.00" y="254.50">cr..</text></g><g><title>__init__ (pandas/core/frame.py:392) (15,904 samples, 18.41%)</title><rect x="949" y="196" width="217" height="15" fill="rgb(245,173,41)"/><text x="952.00" y="206.50">__init__ (pandas/core/frame...</text></g><g><title>init_dict (pandas/core/internals/construction.py:212) (11,832 samples, 13.70%)</title><rect x="1004" y="212" width="162" height="15" fill="rgb(205,203,20)"/><text x="1007.00" y="222.50">init_dict (pandas/co..</text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:61) (8,447 samples, 9.78%)</title><rect x="1051" y="228" width="115" height="15" fill="rgb(216,107,38)"/><text x="1054.00" y="238.50">arrays_to_mgr ..</text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:340) (16,050 samples, 18.58%)</title><rect x="948" y="180" width="219" height="15" fill="rgb(241,86,6)"/><text x="951.00" y="190.50">wrap_results_for_axis (panda..</text></g><g><title>_set_axis (pandas/core/generic.py:638) (95 samples, 0.11%)</title><rect x="1169" y="212" width="1" height="15" fill="rgb(232,150,54)"/><text x="1172.00" y="222.50"></text></g><g><title>drop_primary_dups (autonormalize/normalize.py:180) (78,600 samples, 90.98%)</title><rect x="97" y="84" width="1073" height="15" fill="rgb(248,18,46)"/><text x="100.00" y="94.50">drop_primary_dups (autonormalize/normalize.py:180)</text></g><g><title>mode (pandas/core/frame.py:7695) (73,778 samples, 85.40%)</title><rect x="163" y="100" width="1007" height="15" fill="rgb(213,164,10)"/><text x="166.00" y="110.50">mode (pandas/core/frame.py:7695)</text></g><g><title>apply (pandas/core/frame.py:6487) (73,359 samples, 84.91%)</title><rect x="168" y="116" width="1002" height="15" fill="rgb(250,62,11)"/><text x="171.00" y="126.50">apply (pandas/core/frame.py:6487)</text></g><g><title>get_result (pandas/core/apply.py:151) (73,111 samples, 84.62%)</title><rect x="172" y="132" width="998" height="15" fill="rgb(206,183,31)"/><text x="175.00" y="142.50">get_result (pandas/core/apply.py:151)</text></g><g><title>apply_standard (pandas/core/apply.py:260) (16,840 samples, 19.49%)</title><rect x="940" y="148" width="230" height="15" fill="rgb(237,83,44)"/><text x="943.00" y="158.50">apply_standard (pandas/core/ap..</text></g><g><title>wrap_results (pandas/core/apply.py:308) (16,289 samples, 18.85%)</title><rect x="948" y="164" width="222" height="15" fill="rgb(228,213,35)"/><text x="951.00" y="174.50">wrap_results (pandas/core/app..</text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:349) (185 samples, 0.21%)</title><rect x="1168" y="180" width="2" height="15" fill="rgb(227,30,29)"/><text x="1171.00" y="190.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:5080) (145 samples, 0.17%)</title><rect x="1168" y="196" width="2" height="15" fill="rgb(211,104,41)"/><text x="1171.00" y="206.50"></text></g><g><title>_list_of_series_to_arrays (pandas/core/internals/construction.py:456) (118 samples, 0.14%)</title><rect x="1171" y="132" width="2" height="15" fill="rgb(208,173,41)"/><text x="1174.00" y="142.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1588) (87 samples, 0.10%)</title><rect x="1175" y="148" width="1" height="15" fill="rgb(242,114,38)"/><text x="1178.00" y="158.50"></text></g><g><title>is_interval_dtype (pandas/core/dtypes/common.py:569) (84 samples, 0.10%)</title><rect x="1175" y="164" width="1" height="15" fill="rgb(250,79,46)"/><text x="1178.00" y="174.50"></text></g><g><title>is_dtype (pandas/core/dtypes/dtypes.py:991) (78 samples, 0.09%)</title><rect x="1175" y="180" width="1" height="15" fill="rgb(246,106,22)"/><text x="1178.00" y="190.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1591) (78 samples, 0.09%)</title><rect x="1176" y="148" width="1" height="15" fill="rgb(221,162,13)"/><text x="1179.00" y="158.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1609) (232 samples, 0.27%)</title><rect x="1177" y="148" width="4" height="15" fill="rgb(247,190,44)"/><text x="1180.00" y="158.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (80 samples, 0.09%)</title><rect x="1185" y="212" width="1" height="15" fill="rgb(249,172,28)"/><text x="1188.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (103 samples, 0.12%)</title><rect x="1185" y="196" width="1" height="15" fill="rgb(217,186,53)"/><text x="1188.00" y="206.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (152 samples, 0.18%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(232,210,5)"/><text x="1187.00" y="190.50"></text></g><g><title>_get_take_nd_function (pandas/core/algorithms.py:1419) (337 samples, 0.39%)</title><rect x="1182" y="164" width="5" height="15" fill="rgb(239,217,22)"/><text x="1185.00" y="174.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1654) (369 samples, 0.43%)</title><rect x="1182" y="148" width="5" height="15" fill="rgb(238,210,19)"/><text x="1185.00" y="158.50"></text></g><g><title>_list_of_series_to_arrays (pandas/core/internals/construction.py:457) (1,170 samples, 1.35%)</title><rect x="1173" y="132" width="16" height="15" fill="rgb(216,192,36)"/><text x="1176.00" y="142.50"></text></g><g><title>take_nd (pandas/core/algorithms.py:1655) (111 samples, 0.13%)</title><rect x="1187" y="148" width="2" height="15" fill="rgb(215,127,25)"/><text x="1190.00" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:435) (1,394 samples, 1.61%)</title><rect x="1170" y="100" width="19" height="15" fill="rgb(238,3,3)"/><text x="1173.00" y="110.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:411) (1,394 samples, 1.61%)</title><rect x="1170" y="116" width="19" height="15" fill="rgb(234,54,43)"/><text x="1173.00" y="126.50"></text></g><g><title>all (86,395 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(212,96,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (pyspy2.py:68) (84,731 samples, 98.07%)</title><rect x="32" y="52" width="1158" height="15" fill="rgb(214,66,31)"/><text x="35.00" y="62.50">&lt;module&gt; (pyspy2.py:68)</text></g><g><title>split_dataframe (autonormalize/user_interaction.py:77) (84,727 samples, 98.07%)</title><rect x="32" y="68" width="1158" height="15" fill="rgb(213,38,23)"/><text x="35.00" y="78.50">split_dataframe (autonormalize/user_interaction.py:77)</text></g><g><title>drop_primary_dups (autonormalize/normalize.py:183) (1,412 samples, 1.63%)</title><rect x="1170" y="84" width="20" height="15" fill="rgb(254,103,18)"/><text x="1173.00" y="94.50"></text></g></g></svg>